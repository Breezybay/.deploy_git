{"meta":{"title":"Breezy Bay","subtitle":null,"description":null,"author":null,"url":""},"pages":[{"title":"Games","date":"2018-06-04T16:00:00.000Z","updated":"2018-06-06T09:25:57.357Z","comments":true,"path":"games/index.html","permalink":"/games/index.html","excerpt":"","text":"自己以前做的一些小游戏 - 2016 -微风湾 (Breezy Bay)App Store (iOS) [Unity, Amazon AWS] - 2013 -The Working DeadChrome Store (Web) [Unity]- 2011 -XuerApp Store (iOS) [Cocos2D]","raw":null,"content":null},{"title":"Misc","date":"2018-06-04T16:00:00.000Z","updated":"2018-06-06T11:21:44.687Z","comments":true,"path":"misc/index.html","permalink":"/misc/index.html","excerpt":"","text":"杂从毕设到一些杂七杂八的小东西 - 2012 -Automatic 2.5D Cartoon Modelling硕士论文 Scene with normal 2D characters Scene with 2.5D characters - 2013 -The Working DeadChrome Store (Web) [Unity]- 2011 -XuerApp Store (iOS) [Cocos2D]","raw":null,"content":null},{"title":"About","date":"2018-06-04T16:00:00.000Z","updated":"2018-06-06T09:49:21.199Z","comments":true,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"半透效果皮肤 (Aproximate Subserface-Scattering)","slug":"20180526-ApproximateSSS","date":"2018-05-25T16:00:00.000Z","updated":"2018-06-04T10:53:08.858Z","comments":true,"path":"2018/05/26/20180526-ApproximateSSS/","link":"","permalink":"/2018/05/26/20180526-ApproximateSSS/","excerpt":"开发测试环境：Unity, Android (小米Max2)\n主要看GDC2011这篇演讲原理很简单，用光源反方向点乘视线方向，配合厚度图模拟半透效果","text":"开发测试环境：Unity, Android (小米Max2) 主要看GDC2011这篇演讲原理很简单，用光源反方向点乘视线方向，配合厚度图模拟半透效果 下面vLT的这个 0.2* normal 作者称之为 Subsurface Distortion1half3 vLT = normalize (lightDir + 0.2* normal); 其实没什么用不如去掉，实际使用时只用了-L·V1half fLTDot = pow(saturate(dot(viewDir, -lightDir)), _SSSPower) * _SSSScale; 1half3 sss = thickness * (((_LightColor0.xyz * (fLTDot) + _SSSAmbient)); 参考GDC 2011 – Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering LookFast Subsurface Scattering in Unity","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Shader - PBR BRDF","slug":"20180525-BRDF","date":"2018-05-24T16:00:00.000Z","updated":"2018-06-04T10:47:58.766Z","comments":true,"path":"2018/05/25/20180525-BRDF/","link":"","permalink":"/2018/05/25/20180525-BRDF/","excerpt":"参考Unity的Standard Shader直接写个BRDF PBS的fragment shader，作为基础方便以后修改。\nv2f结构12345678struct v2f &#123;\tfloat4 pos : SV_POSITION;\thalf4 pack0 : TEXCOORD0; // _MainTex _BumpMap\thalf3 viewDir : TEXCOORD01;\thalf3 worldPos : TEXCOORD2;\thalf3x3 tangentToWorld : TEXCOORD3;    // [3x3:tangentToWorld | 1x3:viewDirForParallax or worldPos]\tSHADOW_COORDS(6)&#125;;","text":"参考Unity的Standard Shader直接写个BRDF PBS的fragment shader，作为基础方便以后修改。 v2f结构12345678struct v2f &#123; float4 pos : SV_POSITION; half4 pack0 : TEXCOORD0; // _MainTex _BumpMap half3 viewDir : TEXCOORD01; half3 worldPos : TEXCOORD2; half3x3 tangentToWorld : TEXCOORD3; // [3x3:tangentToWorld | 1x3:viewDirForParallax or worldPos] SHADOW_COORDS(6)&#125;; 顶点12345678910111213141516/// Vertexv2f vert (appdata_full v)&#123; ... o.pos = UnityObjectToClipPos(v.vertex); o.pack0.xy = TRANSFORM_TEX(v.texcoord, _MainTex); o.pack0.zw = TRANSFORM_TEX(v.texcoord, _BumpMap); ... // half3x3(tangent, binormal, normal) o.tangentToWorld = CreateTangentToWorldPerVertex(worldNormal, worldTangent.xyz, worldTangent.w); ...&#125; 把uv都pack到TEXCOORD0 在顶点处建立tangentToWorld矩阵 BRDFUnityStandardBRDF.cginc 的 BRDF1_Unity_PBS 123456789101112131415161718192021222324252627282930313233343536373839404142#if UNITY_HANDLE_CORRECTLY_NEGATIVE_NDOTV// The amount we shift the normal toward the view vector is defined by the dot product.half shiftAmount = dot(normal, viewDir);normal = shiftAmount &lt; 0.0f ? normal + viewDir * (-shiftAmount + 1e-5f) : normal;// A re-normalization should be applied here but as the shift is small we don't do it to save ALU.//normal = normalize(normal);half nv = saturate(dot(normal, viewDir)); // TODO: this saturate should no be necessary here#elsehalf nv = abs(dot(normal, viewDir)); // This abs allow to limit artifact#endifhalf nl = saturate(dot(normal, lightDir));half nh = saturate(dot(normal, halfDir));half lv = saturate(dot(lightDir, viewDir));half lh = saturate(dot(lightDir, halfDir));half diffuseTerm = DisneyDiffuse(nv, nl, lh, perceptualRoughness) * nl;half roughness = PerceptualRoughnessToRoughness(perceptualRoughness);#if UNITY_BRDF_GGXhalf V = SmithJointGGXVisibilityTerm (nl, nv, roughness);half D = GGXTerm (nh, roughness);#else// Legacyhalf V = SmithBeckmannVisibilityTerm (nl, nv, roughness);half D = NDFBlinnPhongNormalizedTerm (nh, PerceptualRoughnessToSpecPower(perceptualRoughness));#endifhalf specularTerm = V * D * UNITY_PI; // Torrance-Sparrow model, Fresnel is applied later#ifdef UNITY_COLORSPACE_GAMMAspecularTerm = sqrt(max(1e-4h, specularTerm));#endif// specularTerm * nl can be NaN on Metal in some cases, use max() to make sure it's a sane valuespecularTerm = max(0, specularTerm * nl);#if defined(_SPECULARHIGHLIGHTS_OFF)specularTerm = 0.0;#endif Metallic &amp; SpecularMetallic1234567891011fixed4 metallicGlossTex = tex2D(_MetallicGlossMap, uv);half metallic = _Metallic * metallicGlossTex.r;half smoothness = _Glossiness * metallicGlossTex.a;half oneMinusDielectricSpec = unity_ColorSpaceDielectricSpec.a;half oneMinusReflectivity = oneMinusDielectricSpec - metallic * oneMinusDielectricSpec;fixed3 specColor = lerp (unity_ColorSpaceDielectricSpec.rgb, tex.rgb, metallic);...half3 diffColor = tex * oneMinusReflectivity * occ; Specular12345678910fixed4 specTex = tex2D(_SpecGlossMap, uv);fixed3 specColor = specTex.rgb;half smoothness = _Glossiness * specTex.a;half oneMinusReflectivity = 1 - SpecularStrength(specColor);...// EnergyConservationBetweenDiffuseAndSpecularhalf3 diffColor = tex * (half3(1,1,1) - specColor) * occ;","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Rules of Play 读书笔记","slug":"20180425-RulesofPlay","date":"2018-04-24T16:00:00.000Z","updated":"2018-06-06T09:22:44.845Z","comments":true,"path":"2018/04/25/20180425-RulesofPlay/","link":"","permalink":"/2018/04/25/20180425-RulesofPlay/","excerpt":"People love pong. Why?\n\nit is simple to play: approachable and easy to understand\nevery game is unique: open-ended with endless possibilities\nelegant representation: a depiction of another game Table Tennis.\nsocial: two players, makes a great spectator sport\nfun\ncool\n","text":"People love pong. Why? it is simple to play: approachable and easy to understand every game is unique: open-ended with endless possibilities elegant representation: a depiction of another game Table Tennis. social: two players, makes a great spectator sport fun cool What is this book aboutThe focus of a game designer is designing game play, conceiving and designing rules and structure that result in an experience for players. Schemas: Rules, Play, Culture The Design ProcessIterative DesignIterative design is a play-based design process…In an iterative methodology, a rough version of the game is rapidly prototyped as early in the design process as possible. This prototype has none of the aesthetic trappings of the final game, but begins to define its fundamental rules and core mechanics. It is not a visual prototype, but an interactive one.Iterative design is a cyclic process that alternates between prototyping, playtesting, evaluation, and refinement …it is not possible to fully anticipate play in advance. It is never possible to completely predict the experience of a game…These questions can never be answered by writing a design document or crafting a set of game rules and materials. They can only be answered by way of play. Rule of thumb regarding prototyping: a game prototype should be created and playtested, at the absolute latest, 20 percent of the way into a project schedule. Prototype your game early. Play it throughtout the entire design process. Have as many other people as you possibly can play your game, and observe them playing. PlaytestingMy primary design technique is to create a game first in my mind and play it there over and over again. This can go on for many weeks. When I feed the need for practical playing experience, I finally build the first prototype and play it with my playtest groups. Once the initial concept is properly elaborated, playtesting becomes the core activity of game development.The fun and excitement of playing cannot be calculated in an abstract fashion: it must be experienced.I prepare each of my playtest sessions in great detail — I plan the exact issues I want to monitor and test. During play, I record relevant data about the game flow. Afterwards, I analyze the results and then make necessary or exploratory changes.","raw":null,"content":null,"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"/tags/读书笔记/"}]},{"title":"省电策略","slug":"20180419-TAThoughts","date":"2018-04-18T16:00:00.000Z","updated":"2018-06-04T08:22:34.411Z","comments":true,"path":"2018/04/19/20180419-TAThoughts/","link":"","permalink":"/2018/04/19/20180419-TAThoughts/","excerpt":"","text":"帧率关闭VSync1Application.targetFrameRate = 60; 不需要高帧率的场景1Application.targetFrameRate = 10; source 12Setting the rendering path to &quot;Vertex lit&quot; seemed to decrease battery usage by 50% on some devices.This choice was suitable to my game because I&apos;m not using any light, shadows or lightmap.","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"}]},{"title":"Level Up 读书笔记","slug":"20180104-LevelUp","date":"2018-01-03T16:00:00.000Z","updated":"2018-06-06T09:22:32.967Z","comments":true,"path":"2018/01/04/20180104-LevelUp/","link":"","permalink":"/2018/01/04/20180104-LevelUp/","excerpt":"第五章之前有很多精彩实用的内容，但从第五章起很多都是像百科一样在罗列一些比较基本的东西了。\n\nGame Designers have more Fun","text":"第五章之前有很多精彩实用的内容，但从第五章起很多都是像百科一样在罗列一些比较基本的东西了。 Game Designers have more Fun TeamDevelopment TeamProgrammer Artist Designer Producer Tester Composer Sound Designer Writer Publising PositionsProduct Manager, Creative Manager, Art Director, Technical Director, Business Development Staff, Lawyer, QA Manager… Ideas1Many game ideas often sound stupid ... never dismiss a game idea, even if it does sound stupid. 1234567List of things to do to get inspired:1. Read something you normally wouldn&apos;t read.2. Take a walk, drive or shower.3. Attend a lecture.4. Play a game, preferably a bad one. Sometimes it takes several iterations on an idea before it works successfully.5. Regardless of the above, follow your passion. 12... all good game characters are wish fulfillment. They give the player a chance to be something they aren&apos;t in the real world.Games should make players feel something that they aren&apos; t in the real world: powerful, smart, sneaky, successful, rich, bad, or heroic. 12**The Theory of Un-Fun** states: start with a &quot;fun&quot; idea. As you develop the game, if you find something in the game that is not fun (or un-fun), then remove it.When you have removed all of the un-fun, then all that should be left is the fun. StoryProduction Triangle: Choose Two [Time, Quality, Money] The Triangle of Weirdness: Choose One [Chatacters, Activities, World] Title1234561. **The literal title** makes it easy to figure out where the title came from. It can be the name of your main character...It can be the main location of your game...Or you can name your game after a gameplay activity or component...2. **The action/cool title** is a title that captures the spirit of the game without mentioning any of the game characters or locations. I think games like Darksiders, Brutal Legend, and Gears of War all have cool titles.3. **The punny title** is a title that makes you appreciate the cleverness of the title. Just Cause, Half Life, and System Shock are all good examples of punny titles...4. **The &quot;purple cow&quot; title** is one that makes your customer stop in their tracks and stare...LittleBigPlanet, Far Cry, and Resident Evil. The advantage to a purple cow title is...It&apos;s going to be a long time before anyone thinks of using the word Halo in their game title......shorter titles are better than longer ones...keep them to two or three syllables like Star Wars, Don-kee Kong, Pac-Man or Hey-lo. Paperwork1Making games is like making chili 1the first rule of responsible game design: love thy player Game Design Document (GGD)12The goal of great game design documentation is communication:communication to the player, to your team members, and to your publishing partners. ####### One-Sheet123456781.Game title2.Intended game systems3.Target age of players4.Intended Entertainment Software Rating Board (ESRB) rating5.A summary of the game ’ s story, focusing on gameplay6.Distinct modes of gameplay7.Unique selling points8.Competitive products. ####### Ten-Pager12345Production Team | Marketing/ExecutivesProvide clear diagrams of gameplay | Show exciting conceptual imagesUse short, punchy sentences | Text in bullet points formUse specific terminology to get your intention clearly across | Use vivid, descriptive examplesCompare gameplay to appropriate games, even vintage titles | Use successful, modern games as comparative titles The Rule of Threes1THREE IS A MAGIC NUMBER Ten-Pager OutlinePAGE 1: TITLE PAGE123456• Game title• Intended game systems• Target age of players• Intended ESRB rating• Projected ship date.Game Logos PAGE 2: GAME OUTLINE12• **Game story summary**• **Game flow** Briefly describe the flow of the game&apos;s action in the context of the locations the player will find themselves in... who they are playing, the camera angle, and genre of gameplay as well as painting a picture of game locations and the player&apos;s goals. PAGE 3: CHARACTERPAGE 4: GAMEPLAYPAGE 5: GAME WORLDPAGE 6: GAME EXPERIENCE1234• What does the player first see when they start the game?• What emotions/moods are meant to be invoked by your game?• How is music and sound used to convey your game&apos;s feel?• How does the player navigate the shell of the game? Include a simple flow chart diagram of how the player would navigate this interface. (You&apos;d be surprised how many games have lousy interfaces because the team never thought about it!) PAGE 7: GAMEPLAY MECHANICS1234A **mechanic** is something that the player interacts with to create or aid with gameplay...moving platforms, opening doors, rope swings, slippery ice.A **hazard** is a mechanic that can harm or kill the player but doesn&apos;t possess intelligence.A **power-up** is an item collected by the player to help them with gameplay.**Collectibles** are items that are collected by the player that don&apos;t have an immediate impact on gameplay. PAGE 8: ENEMIES12If a hazard uses AI, then it qualifies as an **enemy character**. What enemies do we find in the game world? What makes them unique? How does the player overcome them?**Boss characters** are larger, more fearsome enemies usually found at the end of levels or chapters. PAGE 9: CUTSCENESPAGE 10: BONUS MATERIALS ####### The Game Design Document12...eventually YOU will need to read your own GDD....my team mates understood concepts quickly when I drew pictures for them. 12345• Storyboards.• Diagrams.• Animatics.• The beat chart.• The team Wiki. EVERYTHING IS LIQUID12At a certain point, writing things down becomes counterproductive and it all becomes about finishing the game. But you need a starting point and a GDD gives you that launching pad from which to soar....the MOST IMPORTANT PART OF A GAME DESIGNER&apos;S JOB IS COMMUNICATION. ####### Gameplay Progression …how the gameplay unfolds to the player over the course of the game. How this happens is called progression. The Beat Chart12345678• Clumping : too many new enemies or mechanics being introduced at once. Spread these out over the course of the game.• Sameyness : too many identical combinations of enemies and mechanics. You want to mix things up to keep interaction fresh.• Alternate your time of day and color schemes. If you have too many of the same lighting or color schemes in a row, things are going to feel and look repetitive.• Alternate your music tracks. The player is going to get bored listening to the same music over and over again.• Problems in game economy• Mechanics and enemies should be introduced in conjunction with the items and abilities required to defeat them.• When will the player have &quot;everything&quot; in the game?...75% through the game so the last quarter lets the player use all of their cool stuff.• As a rule of thumb, I try to introduce two or three new mechanics, enemies, and rewards per level. Dont Be a Schmuck 123456789• A good idea can come from anywhere.• Make a decision and stick with it.• Update often.• Tackle the tough ones first.• Trust your instincts.• Respect the abilities of your peers and be mindful of their limitations...talk to your team mates about what they&apos;d like to work on. • Save often and always.• Stay organized.• Be prepared. CharacterThree Cs: Character Camera ControlIf you change any of the Three Cs during production, you risk massive problems with your gameplay. FORM FOLLOWS FUNCTION silhouette Personality**: Humorous character, Heroic character, Badass character The power of customization…let the player customize their character furthers their feeling of ownership. metrics shadow second character playable or companion CameraControlsHUD and IconHUDs …be carefull of the “bracketing effect”…Loading screen concept art, trivia questions, game map, character bio… Level DesignMechanics","raw":null,"content":null,"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"/tags/读书笔记/"}]},{"title":"游戏设计艺术读书笔记 Notes of Art of Game Design","slug":"20180103-ArtofGameDesign","date":"2018-01-02T16:00:00.000Z","updated":"2018-06-06T08:05:48.939Z","comments":true,"path":"2018/01/03/20180103-ArtofGameDesign/","link":"","permalink":"/2018/01/03/20180103-ArtofGameDesign/","excerpt":"There is only one path to becoming a game designer, and that is the path of designing games — and more to the point, designing games that people really like.That means that simply jotting down your game idea isn’t enough. You must build the game, play it yourself, and let others play it.When it doesn’t satisfy (and it won’t), you must change it. And change it. And change it again, dozens of times, until you have created a game that people actually enjoy playing.When you have been through this a few times, then you will start to understand what game design is.There’s an saying among game designers: “Your first ten games will suck — so get them out of the way fast.”","text":"There is only one path to becoming a game designer, and that is the path of designing games — and more to the point, designing games that people really like.That means that simply jotting down your game idea isn’t enough. You must build the game, play it yourself, and let others play it.When it doesn’t satisfy (and it won’t), you must change it. And change it. And change it again, dozens of times, until you have created a game that people actually enjoy playing.When you have been through this a few times, then you will start to understand what game design is.There’s an saying among game designers: “Your first ten games will suck — so get them out of the way fast.” Skills a Game Designer NeedCommunication - Communication, Listening, Public SpeakingArts - Visual Arts, Animation, Cinematography, Architecture, Sound Design, MusicTechnical - Engineering, Technical Writing, MathematicsCreativity - Creative Writing, Brainstorming, Psychology, History, AnthropologyBusiness - Business, Management, Economics Lens #1: The Lens of EmotionPeople may forget what you said, but they’ll never forget how you made them feel. —Maya Angelou● What emotions would I like my player to experience? Why?● What emotions are players (including me) having when they play now? Why?● How can I bridge the gap between the emotions players are having and the emotions I’d like them to have? Lens #2: The Lens of Essential Experience● What experience do I want the player to have?● What is essential to that experience?● How can my game capture that essence? VenueIt takes a bit of a mental shift to look past the technologies we use and instead to see the patterns of how we use them Lens #3: The Lens of the VenueThe places that we play exert tremendous influence on the design of our games.To make sure you aren’t designing in a vacuum, ask yourself these questions:● What type of venue best suits the game I’m trying to create?● Does my venue have special properties that will influence my game?● What elements of my game are in harmony with my venue? What elements are not? What is a GameFun is pleasure with surprises Lens #4: The Lens of SurpriseSurprise is so basic that we can easily forget about it. Use this lens to remind yourself to fill your game with interesting surprises.Ask yourself these questions:● What will surprise players when they play my game?● Does the story in my game have surprises? Do the game rules? Does the artwork? The technology?● Do your rules give players ways to surprise each other?● Do your rules give players ways to surprise themselves?Surprise is a crucial part of all entertainment — it is at the root of humor, strategy, and problem solving. Our brains are hardwired to enjoy surprises.In an experiment where participants received sprays of sugar water or plain water into their mouths, the participants who received random sprays considered the experience much more pleasurable than participants who received the sprays according to a fixed pattern, even though the same amount of sugar was delivered.In other experiments, brain scans revealed that even during unpleasant surprises, the pleasure centers of the brain are triggered. Lens #5: The Lens of FunTo maximize your game’s fun, ask yourself these questions:● What parts of my game are fun? Why?● What parts need to be more fun? Work and play … become equivalent to servitude and freedom.Play is manipulation that indulges curiosity. Lens #6: The Lens of CuriosityTo use this lens, think about the player’s true motivations — not just the goals your game has set forth, but the reason the player wants to achieve those goals.● What questions does my game put into the player’s mind?● What am I doing to make them care about these questions?● What can I do to make them invent even more questions? [A game is] an interactive structure of endogenous meaning that requires players to struggle toward a goal. Lens #7: The Lens of Endogenous ValueTo use this lens, think about your players’ feelings about items, objects, and scoring in your game. Ask yourself these questions:● What is valuable to the players in my game?● How can I make it more valuable to them?● What is the relationship between value in the game and the player’s motivations?Remember, the value of the items and score in the game is a direct reflection of how much players care about succeeding in your game.By thinking about what the players really care about and why, you can often get insights about how your game can improve. A game is a closed, formal system, that engages players in structured conflict, and resolves in an unequal outcome.– Tracy Fullerton, Chris Swain, and Steven Hoffman Q1. Games are entered willfully.Q2. Games have goals.Q3. Games have conflict.Q4. Games have rules.Q5. Games can be won and lost.Q6. Games are interactive.Q7. Games have challenge.Q8. Games can create their own internal value.Q9. Games engage players.Q10. Games are closed, formal systems. “I like playing with my friends” “I like the physical activity” “I like feeing immersed in another world” “I like solving problems.“The enjoyment of problem solving seems to be an evolved survival mechanism. One of the first things we do is to state the problem we are trying to solve, that is, define a clear goal (Q2). Next, we frame the problem. We determine its boundaries and the nature of the problem space. We also determine what methods we are allowed to use to solve the problem; that is, we determine the rules of the problem (Q4) … A game is a problem-solving activity, approached with a playful attitude. Lens #8: The Lens of Problem SolvingTo use this lens, think about the problems your players must solve to succeed at your game, for every game has problems to solve. Ask yourself these questions:● What problems does my game ask the player to solve?● Are there hidden problems to solve that arise as part of gameplay?● How can my game generate new problems so that players keep coming back? The Four Basic ElementsMore Visible Aesthetics | Mechanics ——-+——– Story | Technology Less Visible Lens #9: The Lens of the Elemental TetradTo use this lens, take stock of what your game is truly made of. Consider each element separately, and then all of them together as a whole.Ask yourself these questions:● Is my game design using elements of all four types?● Could my design be improved by enhancing elements in one or more of the categories?● Are the four elements in harmony, reinforcing each other, and working together toward a common theme? Lens #10: The Lens of Holographic DesignTo use this lens, you must see everything in your game at once: the four elements and the player experience, as well as how they interrelate.It is acceptable to shift your focus from skin to skeleton and back again, but it is far better to view your game and experience holographically.Ask yourself these questions:● What elements of the game make the experience enjoyable?● What elements of the game detract from the experience?● How can I change game elements to improve the experience? ThemeTo write a mighty book, you must choose a mighty theme.– Herman Melville Unifying ThemesStep 1: Figure out what your theme is.Step 2: Use every means possible to reinforce that theme. Most game themes are experience-based, that is, the goal of the design is to deliver an essential experience to the player. Lens #11: The Lens of Unification● What is my theme?● Am I using every means possible to reinforce that theme?The Lens of Unification works very well with the Lens of the Elemental Tetrad. Use the tetrad to separate out the elements of your game, so you can more easily study them from the perspective of a unified theme. Resonance But there is another kind of theme that can be just as resonant as an experience-based theme; sometimes more so. This is the truth-based theme.Consider the movie Titanic … The main theme is not experience-based. Instead, it is a simple statement … “Love is more important than life, and stronger than death.”This is a powerful statement. But it is a statement that many of us believe deeply in our heart of hearts. It is certainly not a scientific truth, but for many, it is a deeply held, though rarely expressed, personal truth. Lens #12: The Lens of ResonanceTo use the Lens of Resonance, you must look for hidden power.Ask yourself these questions:● What is it about my game that feels powerful and special?● When I describe my game to people, what ideas get them really excited?● If I had no constraints of any kind, what would this game be like?● I have certain instincts about how this game should be. What is driving those instincts?The Lens of Resonance is a quiet, delicate instrument. It is a tool for listening to yourself and listening to others. We bury important things deep inside ourselves, and when something causes them to resonate, it shakes us to our very core. The fact that these things are hidden gives them power, but also makes them hard for us to find. Idea“The secret is: don’t look to other jugglers for inspiration — look everywhere else” Lens #13: The Lens of Infinite InspirationWhen you know how to listen, everybody is the guru. – Ram DassTo use this lens, stop looking at your game, and stop looking at games like it. Instead, look everywhere else.Ask yourself these questions:● What is an experience I have had in my life that I would want to share with others?● In what small way can I capture the essence of that experience and put it into my game?Using this lens requires an open mind and a big imagination. You need to search you feelings and observe everything around you. You must be willing to try the impossible — for surely it is impossible for a roll of the dice to capture the excitement of a swordfight, or for a videogame to make a player feel afraid of the dark — isn’t it? Use this lens to find the non-game experiences that will inspire your game. Your choices in the different quadrants of the tetrad (technology, mechanics, story, and aesthetics) can each be united by a single inspiration, or each can build on different inspirations, blending them together to create something entirely new. When you have concrete visions based on real life that guide your decision making, your experience will acquire an undeniable power, strength, and uniqueness. This lens works hand in hand with Lens #1: Essential Experience. Use the Lens of Infinite Inspiration to seek and find beautiful experiences, and the Lens of Essential Experience to bring them into your game. State the ProblemPeople who come up with clever solutions are almost always the same people who take the time to figure out the real problem.Three advantages of clearly stating your problem: Broader creative space. Most people jump to solutions too fast and start their creative process there. If you start your process at the problem instead of at a proposed solution, you will be able to explore a broader creative space and find solutions that are hiding where no one else is looking. Clear measurement. You have a clear measurement of the quality of proposed ideas: How well do they solve the problem? Better communication. When you are designing with a team, communication is much easier if the problem has been clearly stated. Very often, collaborators will be trying to solve quite different problems and not realize it if the problem has not been clearly stated. Lens #14: The Lens of the Problem StatementTo use this lens, think of your game as the solution to a problem.Ask yourself these questions:● What problem, or problems, am I really trying to solve?● Have I been making assumptions about this game that really have nothing to do with its true purpose?● Is a game really the best solution? Why?● How will I be able to tell if the problem is solved?Defining the constraints and goals for your game as a problem statement can help move you to a clear game design much more quickly. Subconscious Subconscious Tip #1: Pay Attention #2: Record Your Ideas #3: Manage Its Appetites (Judiciously) #4: Sleep #5: Don’t Push Too Hard Brainstorming Brainstorm Tip #1: The Write Answer #2: Write or Type? #3: Sketch #4: Toys #5: Change Your Perspective #6: Immerse Yourself #7: Crack Jokes #8: Spare No Expense #9: The Writing on the Wall #10: The Space Remembers #11: Write Everything #12: Number Your Lists #13: Mix and Match Categories #14: Talk To Yourself #15: Find a Partner Iteration pick an idea and decide you are going to make it happen be ready to reverse your decision when you realize it is wrong The Eight Filters Lens # 15: The Lens of the Eight FiltersTo use this lens, you must consider the many constraints your design must satisfy. You can only call your design finished when it can pass through all eight filters without requiring a change.Ask yourself the eight key questions:● Does this game feel right?● Will the intended audience like this game enough?● Is this a well-designed game?● Is this game novel enough?● Will this game sell?● Is it technically possible to build this game?● Does this game meet our social and community goals?● Do the playtesters enjoy this game enough?In some situations, there may be still more filters; for example, an educational game will also have to answer questions like “Does this game teach what it is supposed to?” If your design requires more filters, don’t neglect them. The Rule of the Loop: The more times you test and improve your design, the better your game will be.● Loop Question 1: How can I make every loop count?● Loop Question 2: How can I loop as fast as possible? The Spiral Model, Barry Boehm, 1986 Come up with a basic design. Figure out the greatest risks in your design. Build prototypes that mitigate those risks. Test the prototypes. Come up with a more detailed design based on what you have learned. Return to step 2. Mechanic might not be as fun as we think. Have a programmer make a very abstract version of this gameplay mechanic, with simple geometric shapes … You can probably have a working game in a week or two, and start answering questions about whether it is fun right away. (Technical limits) The game engine might not be able to handle XXX Build a quick prototype that does nothing but XXX, to see if the engine can handle it. This prototype has no gameplay; it is purely to test technical limits. If it can handle it, great! If it can’t, you can figure out a solution now, before any art has been generated. Again, this prototype will be a throwaway. Creating all the art assets might take more than we have Have an artist create one house and one animated character immediately to see how long it takes, and if it takes longer than you can afford, change your design immediately. We aren’t sure people will like our characters and story. An art prototype … Have your artists draw some concept art, or produce test renders of your characters and settings. Create some storyboards that show how the story progresses. Once you have these, start showing them to people (hopefully people in your target demographic) and gauge their reactions. Figure out what they like, don’t like, and why. Maybe they like the look of the main character, but hate his attitude. Maybe the villain is exciting, but the story is boring. Lens # 16: The Lens of Risk MitigationTo use this lens, stop thinking positively, and start seriously considering the things that could go horribly wrong with your game.Ask yourself these questions:● What could keep this game from being great?● How can we stop that from happening?Risk management is hard. It means you have to face up to the problems you would most like to avoid, and solve them immediately. But if you discipline yourself to do it, you’ll loop more times, and more usefully, and get a better game as a result. It is tempting to ignore potential problems and just work on the parts of your game you feel most confident about. You must resist this temptation and focus on the parts of your game that are in danger. Prototyping Tip 1: Answer a Question2: Forget QualityWhen working on a prototype all that matters is whether it answers the question. The faster it can do that, the better … polishing your prototype may even make things worse. Playtesters (and colleagues) are more likely to point out problems with something that looks rough than with something that looks polished. 3: Don’t Get AttachedThe first versions of your system … (are) prototypes that you will need to discard before you build the system the “right” way… you won’t throw out everything — you’ll keep little pieces here and there that really work and you’ll combine them to make something greater. 4: Prioritize Your Prototypesthe biggest risks first….the “upstream” prototype is your highest priority. 5: Parallelize Prototypes Productively6: It Doesn’t Have to be Digital7: Pick a “Fast Loop” Game Engine8: Build the Toy FirstLens # 17: The Lens of the ToyTo use this lens, stop thinking about whether your game is fun to play, and start thinking about whether it is fun to play with.Ask yourself these questions:● If my game had no goal, would it be fun at all? If not, how can I change that?● When people see my game, do they want to start interacting with it, even before they know what to do? If not, how can I change that?There are two ways to use the Lens of the Toy. One way is to use it on an existing game, to figure out how to add more toy-like qualities to it — that is, how to make it more approachable, and more fun to manipulate. But the second way, the braver way, is to use it to invent and create new toys before you even have any idea what games will be played with them. This is risky if you are on a schedule — but if you are not, it can be a great “divining rod” to help you find wonderful games you might not have discovered otherwise. Closing the Loop Game designer Mark Cerny … argues that you are in pre-production until you have finished two publishable levels of your game, complete with all necessary features… usually this point is generally reached when 30% of the necessary budget has been spent. 50% rules When planning, make sure you could have a shipable game at 50% budget. All core gameplay elements should be fully playable at 50% schedule. Lens #18: The Lens of PassionAt the end of each prototype, when you are carefully mitigating risks and planning what to do next, don’t forget to check how you feel about your game with these important questions:● Am I filled with blinding passion about how great this game will be?● If I’ve lost the passion, can I find it again?● If the passion isn’t coming back, shouldn’t I be doing something else?At the end of every sprint, when you are studying your prototypes and planning what to do next, you must remember to also do a “passion check.” Passion is the way your subconscious tells you that it is excited about your game. If the passion has gone away, something has gone wrong — if you can’t figure out what it is, it is very likely your game will be dead on arrival. Passion has its dangers — it is an irrational emotion, after all, but you must take it seriously, for more often than not, passion is what knocks down obstacles and carries a game to success. PlayerEinstein’s ViolinProject Yourself LeBlanc’s Taxonomy of Game Pleasures SensationSensory pleasure is often the pleasure of the toy (see Lens #15). This pleasure cannot make a bad game into a good one, but it can often make a good game into a better one. Fantasy Narrative Challenge Fellowship Discovery Expression Submission Misogynist?Males: Mastery, Competition, Destruction, Spatial Puzzles, Trial and ErrorFemales: Emotion, Real World, Nurturing, Dialog and Verbal Puzzles, Learning by Example, Social Lens #19: The Lens of the PlayerTo use this lens, stop thinking about your game, and start thinking about your player.Ask yourself these questions about the people who will play your game:● In general, what do they like?● What don’t they like? Why?● What do they expect to see in a game?● If I were in their place, what would I want to see in a game?● What would they like or dislike about my game in particular?A good game designer should always be thinking of the player, and should be an advocate for the player. Skilled designers hold The Lens of the Player and the Lens of Holographic Design in the same hand, thinking about the player, the experience of the game, and the mechanics of the game all at the same time. Thinking about the player is useful, but even more useful is watching them play your game. The more you observe them playing, the more easily you’ll be able to predict what they are going to enjoy. Bartle’s Taxonomy of Player Types ♦ Achievers ♠ Explorers ♥ Socializers ♣ Killers Acting Killers | AchieversPlayers ——–+——– WorldSocializers | Explorers Ineracting Lens #20: The Lens of PleasureTo use this lens, think about the kinds of pleasure your game does and does not provide.Ask yourself these questions:● What pleasures does your game give to players? Can these be improved?● What pleasures are missing from your experience? Why? Can they be added?Ultimately, the job of a game is to give pleasure. By going through lists of known pleasures, and considering how well your game delivers each one, you may be inspired to make changes to your game that will increase your players’ enjoyment. Always be on the lookout, though, for unique, unclassified pleasures not found in most games — for one of these might be what gives your game the unique quality it needs. ExperienceModeling Focuskey components … to put a player into a flow state:● Clear goals.● No distractions.● Direct feedback.● Continuously challenging. Lens #21: The Lens of FlowTo use this lens, consider what is holding your player’s focus.● Does my game have clear goals? If not, how can I fix that?● Are the goals of the player the same goals I intended?● Are there parts of the game that distract players to the point they forget their goal? If so, can these distractions be reduced, or tied into the game goals?● Does my game provide a steady stream of not-too-easy, not-too-hard challenges, taking into account the fact that the player’s skills may be gradually improving?● Are the player’s skills improving at the rate I had hoped? If not, how can I change that? MotivationThree mental needs, Ryan and DeciCompetence: need to feel good at something.Autonomy: need freedom to do things my own wayRelatedness: need to connect with other people. Lens #22: The Lens of NeedsTo use this lens, stop thinking about your game, and start thinking about what basic human needs it fulfills.● On which levels of Maslow’s hierarchy is my game operating?● How can I make my game fulfill more basic needs than it already is?● On the levels my game is currently operating, how can it fulfill those needs even better?It sounds strange to talk about a game fulfilling basic human needs, but everything that people do is an attempt to fulfill these needs in some way. And keep in mind, some games fulfill needs better than others — your game can’t just promise the need, it must deliver fulfillment of the need. If a player imagines that playing your game is going to make them feel better about themselves, or get to know their friends better, and your game doesn’t deliver on these needs, your player will move on to a game that does. Wanna vs. Hafta External punishment | rewards Pain avoiding —-+—- Pleasure seeking shame | fun Internal Lens #23: The Lens of MotivationEvery game is a complex ecosystem of motivations. To examine them more closely, ask yourself these questions:● What motivations do players have to play my game?● Which motivations are most internal? Which are most external?● Which are pleasure seeking? Which are pain avoiding?● Which motivations support each other?● Which motivations are in conflict? Novelty Lens #24: The Lens of NoveltyDifferent isn’t always better, but better is always different. —Scotty MeltzerTo ensure you harness the powerful motivation of novelty, ask yourself these questions:● What is novel about my game?● Does my game have novelties throughout or just at the beginning?● Do I have the right mix of the novel and the familiar?● When the novelty wears off, will players still enjoy my game? Judgment Lens #25: The Lens of JudgmentTo decide if your game is a good judge of the players, ask yourself these questions:● What does your game judge about the players?● How does it communicate this judgment?● Do players feel the judgment is fair?● Do they care about the judgment?● Does the judgment make them want to improve? MechanicsSpace Lens #26: The Lens of Functional SpaceTo use this lens, think about the space in which your game really takes place when all surface elements are stripped away.● Is the space of this game discrete or continuous?● How many dimensions does it have?● What are the boundaries of the space?● Are there sub-spaces? How are they connected?● Is there more than one useful way to abstractly model the space of this game? Time Lens #27: The Lens of TimeIt is said that “timing is everything.” Our goal as designers is to create experiences, and experiences are easily spoiled when they are too short or too long, too fast or too slow. ask these questions to make yours just the right length:● What is it that determines the length of my gameplay activities?● are my players frustrated because the game ends too early? How can I change that?● are my players bored because the game goes on too long? How can I change that?● Would clocks or races make my gameplay more exciting?● Time limits can irritate players. Would I better off without time limits?● Would a hierarchy of time structures help my game? That is, several short rounds that together comprise a larger round?Timing can be very difficult to get right, but it can make or break a game. Often, it makes sense to follow the old vaudevillian adage “leave’em wanting more.” Objects, Attributes and States Lens #28: The Lens of the State MachineTo use this lens, think about what information changes during your game. ask yourself these questions:● What are the objects in my game?● What are the attributes of the objects?● What are the possible states for each attribute?● What triggers the state changes for each attribute?Gameplaying is decision making. Decisions are made based on information. Deciding the different attributes, their states, and what changes them is core to the mechanics of your game. Secrets (Information) Lens #29: The Lens of SecretsChange who has what information, and you change your game completely. To use this lens, think about who knows what and why. ask yourself these questions:● What is known by the game only?● What is known by all players?● What is known by some or only one player?● Would changing who knows what information improve my game in some way?Gameplaying is decision making. Decisions are made based on information. Deciding the different attributes, their states, and who knows about them is core to the mechanics of your game. Small changes to who knows what infor- mation can radically change a game, sometimes for the better, sometimes for the worse. Who knows about what attributes can even change over the course of a game—a great way to create drama in your game is to make an important piece of private information suddenly become public. Action Add more verbs Verbs that can act on many objects Goals that can be achieved more than one way Many subjects Side effects that change constraints Lens #30: The Lens of EmergenceTo make sure your game has interesting qualities of emergence, ask yourself these questions:● How many verbs do my players have?● How many objects can each verb act on?● How many ways can players achieve their goals?● How many subjects do the players control?● How do side effects change constraints? Lens #31: The Lens of ActionTo use this lens, think about what your players can do and what they can’t and why. ask yourself these questions:● What are the basic actions in my game?● What are the strategic actions?● What strategic actions would I like to see? How can I change my game in order to make those possible?● am I happy with the ratio of strategic to basic actions?● What actions do players wish they could do in my game that they cannot? Can I somehow enable these, either as basic or strategic actions?A game without actions is like a sentence without verbs—nothing happens. Deciding the actions in your game will be the most fundamental decision you can make as a game designer. Tiny changes to these actions will have tremendous ripple effects with the possibility of either creating marvelous emergent gameplay or making a game that is predictable and tedious. Choose your actions carefully, and learn to listen to your game and your players to learn what is made possible by your choices. Rules Operational rules: what the players ‘do’ to play the game Foundational rules: abstract, mathematical representation of game state and how and when it changes Behavioral rules: “good sportsmanship”, “Unwritten Rules” Written rules: interactive tutorials, “How will players learn to play my game?” Laws: “tournament rules” Official rules Advisory rules: “rules of strategy” House rules: “feedback”, players tune the operational rules to make the game more fun Modes, Enforcer, Cheatability you must be able to state your game’s goal and state it clearly … the more easily players understand the goal, the more easily they can visualize achieving it, and the more likely they are going to want to play your game.Good game goals are as follows: Concrete Achievable Rewarding Lens #32: The Lens of GoalsTo ensure the goals of your game are appropriate and well balanced, ask yourself these questions:● What is the ultimate goal of my game?● Is that goal clear to players?● If there is a series of goals, do the players understand that?● are the different goals related to each other in a meaningful way?● are my goals concrete, achievable, and rewarding?● Do I have a good balance of short and long term goals?● Do players have a chance to decide on their own goals? A game is not just defined by its rules, a game is its rules. Lens #33: The Lens of RulesTo use this lens, look deep into your game, until you can make out its most basic structure. ask yourself these questions:● What are the foundational rules of my game? How do these differ from the operational rules?● Are there “laws” or “house rules” that are forming as the game develops? Should these be incorporated into my game directly?● Are there different modes in my game? Do these modes make things simpler, or more complex? Would the game be better with fewer modes? More modes?● Who enforces the rules?● Are the rules easy to understand, or is there confusion about them? If there is confusion, should I fix it by changing the rules or by explaining them more clearly?There is a common misconception that designers make games by sitting down and writing a set of rules. This usually isn’t how it happens at all. a game’s rules are arrived at gradually and experimentally. The designer’s mind generally works in the domain of “operational rules,” occasionally switching to the perspective of “foundational rules” when thinking about how to change or improve the game. The “written rules” usually come toward the end, once the game is playable. Part of the designer’s job is to make sure there are rules that cover every circumstance. be sure to take careful notes as you playtest, because it is during these tests that holes in your rules will appear—if you just patch them quickly and don’t make a note, the same hole will just show up again later. a game is its rules—give them the time and consideration that they deserve. Skill Physical skills: dance games Mental skills: games are interesting when there are interesting decisions to make Social skills: Poker is largely a social game … find the right mix of real and virtual skills … it is important that you draw a clear distinction between them in your mind.Make a list of all the skills required in your game. Lens #34: The Lens of SkillTo use this lens, stop looking at your game, and start looking at the skills you are asking of your players. ask yourself these questions:● What skills does my game require from the player?● Are there categories of skill that this game is missing?● Which skills are dominant?● Are these skills creating the experience I want?● Are some players much better at these skills than others? Does this make the game feel unfair?● Can players improve their skills with practice, leading to a feeling of mastery?● Does this game demand the right level of skill?Exercising skills can be a joyful thing—it is one of the reasons that people love games. Of course, it is only joyful if the skills are interesting and rewarding and if the challenge level strikes that ideal balance between “too easy” and “too hard.” Even dull skills (such as pushing buttons) can be made more interesting by dressing them up as virtual skills and providing the right level of challenge. Use this lens as a window into the experience the player is having. because skills do so much to define experience, the lens of Skill works quite well in conjunction with lens #2, Essential Experience. Chance Probability regret: People avoid the options that cause the most pain… willing to pay a price/take risks to eliminate the potential of regret. Tversky: “When it comes to taking risks for gains, people are conservative. They will make a sure gain over a problem gain. But … when people are faced with a choice between a small, vertain loss and a large, probable loss, they will gamble.” 沉没成本 Lens #35: The Lens of Expected ValueTo use this lens, think about the chance of different events occurring in your game and what those mean to your player. ask yourself these questions:● What is the actual chance of a certain event occurring?● What is the perceived chance?● What value does the outcome of that event have? Can the value be quanti- fied? are there intangible aspects of value that I am not considering?● Each action a player can take has a different expected value when I add up all the possible outcomes. am I happy with these values? Do they give the player interesting choices? are they too rewarding, or too punishing? Expected value is one of your most valuable tools for analyzing game balance. The challenge of using it is finding a way to numerically represent everything that can happen to a player. Gaining and losing money is easy to represent. but what is the numerical value of “boots of speed” that let you run faster or a “warp gate” that lets you skip two levels? These are difficult to quantify perfectly—but that doesn’t mean you can’t take a guess. as we’ll see in the next chapter, as you go through multiple iterations of game testing and tweaking parameters and values in your game, you will also be tweaking your own estimations of the values of different outcomes. Quantifying these less tangible elements can be quite enlightening, because it makes you think concretely about what is valuable to the player and why—and this concrete knowledge will put you in control of the balance of your game. Skill and Chance Estimating chance is a skill Skills have a probability of success Estimating an opponent’s skill is a skill Predicting pure chance is an imagined skill Controlling pure chance is an imagined skill Lens #36: The Lens of ChanceTo use this lens, focus on the parts of your game that involve randomness and risk, keeping in mind that those two things are not the same. ask yourself these questions:● What in my game is truly random? What parts just feel random?● Does the randomness give the players positive feelings of excitement and challenge, or does it give them negative feelings of hopelessness and lack of control?● Would changing my probability distribution curves improve my game?● Do players have the opportunity to take interesting risks in the game?● What is the relationship between chance and skill in my game? are there ways I can make random elements feel more like the exercise of a skill? are there ways I can make exercising skills feel more like risk taking?Risk and randomness are like spices. a game without any hint of them can be completely bland, but put in too much and they overwhelm everything else. but get them just right, and they bring out the flavor of everything else in your game. Unfortunately, using them in your game is not as simple as sprinkling them on top. You must look into your game to see where elements of risk and randomness naturally arise, and then decide how you can best tame them to do your bidding. Don’t fall into the trap of thinking that elements of chance only occur around die rolls or randomly generated numbers. On the contrary, you can find them wherever a player encounters the unknown. Balance… it is generally considered the most artful part of game design Fairness Rock, Paper, Scissors Lens #37: The Lens of FairnessTo use the lens of fairness, think carefully about the game from each player’s point of view. Taking into account each player’s skill level, find a way to give each player a chance of winning that each will consider to be fair.ask yourself these questions:● Should my game be symmetrical? Why?● Should my game be asymmetrical? Why?● Which is more important: that my game is a reliable measure of who has the most skill or that it provide an interesting challenge to all players?● If I want players of different skill levels to play together, what means will I use to make the game interesting and challenging for everyone?Fairness can be a slippery subject. There are some cases where one side has an advantage over the other and the game still seems fair. Sometimes this is so that players of unequal skill can play together, but there can be other reasons. In the game Alien vs. Predator, for example, it is generally recognized that in multiplayer mode, Predators have a significant advantage over the aliens. Players do not consider it to be unfair, however, because it is in keeping with the Alien vs. Predator story world, and they accept that if they play as an alien, they will be at a disadvantage and will need to compensate for that with extra skill. It is a badge of pride among players to be able to win the game when playing as an alien. Techniques for striking a proper balance: ● Increase difficulty with each success● Let skilled players get through easy parts fast● Create “layers of challenge”: to give a grade at end of each mission (“C”, “A+”)● Let players choose the difficulty level: not a very good option● Playtest with a variety of (a mix of skilled and novice) players● Give the losers a break: Mario Kart, players who are behind get good stuff “What percentage of players do I want to be able to complete this game?”“…a few early successes can do a lot to build a player’s confidence — a confident player will give up less easily…” Lens #38: The Lens of ChallengeChallenge is at the core of almost all gameplay. You could even say that a game is defined by its goals and its challenges. When examining the challenges in your game, ask yourself these questions:● What are the challenges in my game?● are they too easy, too hard, or just right?● Can my challenges accommodate a wide variety of skill levels?● How does the level of challenge increase as the player succeeds?● Is there enough variety in the challenges?● What is the maximum level of challenge in my game? Choices A good game gives the player meaningful choices… choices that will have a real impact on what happens next… ● If choices &gt; desires, then the player is overwhelmed.● If choices &lt; desires, the player is frustrated.● If choices = desires, the player has a feeling of freedom and fulfillment. …you need to figure out the types and number of things the player would like to do. Lens #39: The Lens of Meaningful ChoicesWhen we make meaningful choices, it lets us feel like the things we do matter. To use this lens, ask yourself these questions:● What choices am I asking the player to make?● Are they meaningful? How?● Am I giving the player the right number of choices? Would more make them feel more powerful? Would less make the game clearer?● Are there any dominant strategies in my game? Triangularity: Low risk, low reward — High rist, high rewardLens #40: The Lens of TriangularityGiving a player the choice to play it safe for a low reward or to take a risk for a big reward is a great way to make your game interesting and exciting. To use the lens of Triangularity, ask yourself these questions:● Do I have triangularity now? If not, how can I get it?● Is my attempt at triangularity balanced? That is, are the rewards commensurate with the risks?Once you start looking for triangularity in games, you will see it everywhere. a dull, monotonous game can quickly become exciting and rewarding when you add a dash of triangularity. ● Manual or automatic?● Kart or bike?● Use speed boost pads?● Left or right? David Perry: …such that players are doing three things at all times: exercising a skill, taking risks, and working a strategy. Lens #41: The Lens of Skill vs. ChanceTo help determine how to balance skill and chance in your game, ask yourself these questions:● Are my players here to be judged (skill) or to take risks (chance)?● Skill tends to be more serious than chance: is my game serious or casual?● Are parts of my game tedious? If so, will adding elements of chance enliven them?● Do parts of my game feel too random? If so, will replacing elements of chance with elements of skill or strategy make the players feel more in control? Lens #42: The Lens of Head and HandsYogi Berra once said, “baseball is 90% mental. The other half is physical.” To make sure your game has a more realistic balance of mental and physical elements, use the lens of Head and Hands. ask yourself these questions:● Are my players looking for mindless action or an intellectual challenge?● Would adding more places that involve puzzle solving in my game make it more interesting?● Are there places where the player can relax their brain and just play the game without thinking?● Can I give the player a choice—succeed either by exercising a high level of dexterity or by finding a clever strategy that works with a minimum of physical skill?● If “1” means all physical and “10” means all mental, what number would my game get?This lens works particularly well when used in conjunction with lens #19, The Player. Competition and cooperation are basic, animal urges. Lens #43: The Lens of CompetitionDetermining who is most skilled at something is a basic human urge. Games of competition can satisfy that urge. Use this lens to be sure your competitive game makes people want to win it. ask yourself these questions:● Does my game give a fair measurement of player skill?● Do people want to win my game? Why?● Is winning this game something people can be proud of? Why?● Can novices meaningfully compete at my game?● Can experts meaningfully compete at my game?● Can experts generally be sure they will defeat novices? Lens #44: The Lens of CooperationCollaborating and succeeding as a team is a special pleasure that can create lasting social bonds. Use this lens to study the cooperative aspects of your game. ask these questions:● Cooperation requires communication. Do my players have enough opportunity to communicate? How could communication be enhanced?● Are my players friends already, or are they strangers? If they are strangers, can I help them break the ice?● Is there synergy (2 + 2 = 5) or antergy (2 + 2 = 3) when the players work together? Why?● Do all the players have the same role, or do they have special jobs?● Cooperation is greatly enhanced when there is no way an individual can doa task alone. Does my game have tasks like that?● Tasks that force communication inspire cooperation. Do any of my tasks force communication? Lens #45: The Lens of Competition vs. CooperationBalancing competition and cooperation can be done in many interesting ways. Use this lens to decide whether they are balanced properly in your game. ask these questions:● If “1” is competition and “10” is cooperation, what number should my game get?● Can I give players a choice whether to play cooperatively or competitively?● Does my audience prefer competition, cooperation, or a mix?● Is team competition something that makes sense for my game? Is my game more fun with team competition or with solo competition? length of the gameplay…For the fist 90 seconds, the player has unlimited lives……after twenty minutes, Armageddon begins… Rewards…people want to be judged favorably.● Subway surfers…gradually increase the value of the rewards as the player progresses in the game.● Power of variable rewards over fixed ones — delightful surprise Lens #46: The Lens of RewardEveryone likes to be told they are doing a good job. ask these questions to determine if your game is giving out the right rewards in the right amounts at the right times:● What rewards is my game giving out now? Can it give out others as well?● Are players excited when they get rewards in my game, or are they bored by them? Why?● Getting a reward you don’t understand is like getting no reward at all. Do my players understand the rewards they are getting?● Are the rewards my game gives out too regular? Can they be given out in a more variable way?● How are my rewards related to one another? Is there a way that they could be better connected?● How are my rewards building? Too fast, too slow, or just right?Balancing rewards is different for every game. Not only does a designer have to worry about giving out the right ones, but he have to worry about giving them at the right times in the right amounts. This can only be determined through trial and error—even then, it probably won’t be right for everyone. When trying to balance rewards, it is hard to be perfect—you often have to settle for “good enough.” Punishment …One way to remove powers fairly is to take them away temporarily……reward is always a better tool for reinforcement than punishment… Lens #47: The Lens of PunishmentPunishment must be used delicately, since after all, players are in a game of their own free will. balanced appropriately, it will give everything in your game more meaning, and players will have a real sense of pride when they succeed at your game. To examine the punishment in your game, ask yourself these questions:● What are the punishments in my game?● Why am I punishing the players? What do I hope to achieve by it?● Do my punishments seem fair to the players? Why or why not?● Is there a way to turn these punishments into rewards and get the same or a better effect?● Are my strong punishments balanced against commensurately strong rewards? …cutting out boring, complex, or unnecessary decisions and actions…It seems that perfection is reached not when there is nothing left to add, but when there is nothing left to take away. — Antoine de Saint-Exupery ● Innate complexity: …the very rules of the game get very complex…often gets a bad name…the pawns in chess…● Emergent complexity: … a very simple rulesets that give rise to billions of intricate…create a simple ruleset which emerges balanced surprises.. Lens #48: The Lens of Simplicity/ComplexityStriking the right balance between simplicity and complexity is difficult and must be done for the right reasons. Use this lens to help your game become one in which meaningful complexity arises out of a simple system. ask yourself these questions:● What elements of innate complexity do I have in my game?● Is there a way this innate complexity could be turned into emergent complexity?● Do elements of emergent complexity arise from my game? If not, why not?● Are there elements of my game that are too simple? Elegant: simple systems that perform robustly in complex situations. There is an old Hollywood rule of thumb: if a line in a script doesn’t serve at least two purposes, it should be cut. Lens #49: The Lens of EleganceMost “classic games” are considered to be masterpieces of elegance. Use this lens to make your game as elegant as possible. ask yourself these questions:● What are the elements of my game?● What are the purposes of each element? Count these up to give the element an “elegance rating.”● For elements with only one or two purposes, can some of these be combined into each other or removed altogether?● For elements with several purposes, is it possible for them to take on even more? CharacterLens #50: The Lens of CharacterElegance and character are opposites. They are like miniature versions of simplicity and complexity and must be kept in balance. To make sure your game has lovable, defining quirks, ask yourself these questions:● Is there anything strange in my game that players talk about excitedly?● Does my game have funny qualities that make it unique?● Does my game have flaws that players like? Detail and Imagination● Only detail what you can do well: …use subtitles…the player’s imagination will fill in a voice…this idea goes for scenery, sfx, characters, animations…if you can’t do it well, try to find a way to leave it to the player’s imagination.● Give details the imagination can use● Familiar worlds do not need much detail● Use the binocular effect: …filling in the close-ups on the tiny distant figures● Give details that inspire imagination: …it is a fantasy—it only has to be tied to reality by a thin thread… Lens #51: The Lens of ImaginationAll games have some element of imagination and some element of connection to reality. Use this lens to help find the balance between detail and imagination. ask yourself these questions:● What must the player understand to play my game?● Can some element of imagination help them understand that better?● What high-quality, realistic details can we provide in this game?● What details would be low quality if we provided them? Can imagination fill the gap instead?● Can I give details that the imagination will be able to reuse again and again?● What details I provide inspire imagination?● What details I provide stifle imagination? Game Balancing MethodologiesDon’t jump in with balancing before thought clearly about problem statement.Doubling and halvingTrain your intuition by guessing exactly: guess exactly erery time you put food in microwave.Document your modelDevelop a better model about how things are related as you experiment with balancing…alter your model if it doesn’t match…writing down your observations and your model.Plan to balance: … put in systems that make it easy to change the values expect to have to balance.Let the players do it: … mostly, balancing the game is better left to the designers. Lens #52: The Lens of EconomyGiving a game an economy can give it surprising depth and a life all its own. But like all living things, it can be difficult to control. Use this lens to keep your economy in balance:● How can my players earn money? Should there be other ways?● What can my players buy? Why?● Is money too easy to get? Too hard? How can I change this?● Are choices about earning and spending meaningful ones?● Is a universal currency a good idea in my game, or should there be specialized currencies? Problems of ‘adjust to the player’s skill level on the fly’:If players know all of their op’s skill are not absolute but relative to the player’s skill, it damages the illusion… (e.g. in one NFS op’s car have a relative position no matter the player’s speed, feels unfair, and Ace Combat 7)Players improve with practice: …many players felt insulted, diappointed—they wanted to keep practicing to master the challenge. Lens #53: The Lens of BalanceThere are many types of game balance, and each is important. However, it is easy to get lost in the details and forget the big picture. Use this simple lens to get out of the mire, and ask yourself the only important question:● Does my game feel right? Why or why not? PuzzlesA Puzzle is a Game with a Dominant Strategy…puzzles are just games that aren’t fun to replay…a puzzle is anything that makes you stop and think… Make the goal easily understood, if players aren’t sure what they are supposed to do, they will quickly lose interest, unless figuring out what to do is actually fun. Lens #54: The Lens of AccessibilityWhen you present a puzzle to players (or a game of any kind), they should be able to clearly visualize what their first few steps would be. ask yourself these questions:● How will players know how to begin solving my puzzle or playing my game? Do I need to explain it, or is it self-evident?● Does my puzzle or game act like something they have seen before? If it does, how can I draw attention to that similarity. If it does not, how can I make them understand how it does behave?● Does my puzzle or game draw people in and make them want to touch it and manipulate it? If not, how I can I change it so that it does? Sense of Progress Game of Twenty QuestionsVisible progress is the primary driver of mood in the workplace. Lens #55: The Lens of Visible ProgressPlayers need to see that they are making progress when solving a difficult problem. To make sure they are getting this feedback, ask yourself these questions:● What does it mean to make progress in my game or puzzle?● Is there enough progress in my game? Is there a way I can add more interim steps of progressive success?● What progress is visible, and what progress is hidden? Can I find a way to reveal what is hidden? …give them several different related puzzles at once…if they get tired of one of them, they can go off and try another for a while. “A change is as good as a rest”Lens #56: The Lens of ParallelismParallelism in your puzzle brings parallel benefits to the player’s experience. To use this lens, ask yourself these questions:● are there bottlenecks in my design where players are unable to proceed if they cannot solve a particular challenge? If so, can I add parallel challenges for a player to work on when this challenge stumps them?● If parallel challenges are too similar, the parallelism offers little benefit. are my parallel challenges different enough from each other to give players the benefit of variety?● Can my parallel challenges be connected somehow? Is there a way that making progress on one can make it easier to solve the others? Lens #57: The Lens of the PyramidPyramids fascinate us because they have a singular highest point. To give your puzzle the allure of the ancient pyramids, ask yourself these questions:● Is there a way all the pieces of my puzzle can feed into a singular challenge at the end?● Big pyramids are often made of little pyramids—can I have a hierarchy of ever more challenging puzzle elements, gradually leading to a final challenge?● Is the challenge at the top of my pyramid interesting, compelling, and clear? Does it make people want to work in order to get to it? …a well-timed hint can renew their hope and thier curiosity… …experience is triggered not by solving the puzzle but by seeing the answer… …Perceptual Shift…involve almost no possibility of progress…should be used sparingly… Lens #58: The Lens of the PuzzlePuzzles make the player stop and think. To ensure your puzzles are doing everything you want to shape the player experience, ask yourself these questions:● What are the puzzles in my game?● Should I have more puzzles, or less? Why?● Which of the ten puzzle principles apply to each of my puzzles?● Do I have any incongruous puzzles? How can I better integrate them into the game? (Use lens #49, Elegance, to help do this).In the last few chapters, we have focused on game internals—it is now time toconsider an external element, the interface of the game. InterfaceThe goal of an interface is to make players feel in control of their experience. Lens #59: The Lens of ControlThis lens has uses beyond just examining your interface, since meaningful control is essential for immersive interactivity. To use this lens, ask yourself these questions:● When players use the interface, does it do what is expected? If not, why not?● Intuitive interfaces give a feeling of control. Is your interface easy to master or hard to master?● Do your players feel they have a strong influence over the outcome of the game? If not, how can you change that?● feeling powerful = feeling in control. Do your players feel powerful? Can you make them feel more powerful somehow? Lens #60: The Lens of Physical InterfaceSomehow, the player has a physical interaction with your game. Copying existing physical interfaces is an easy trap to fall into. Use this lens to be sure that your physical interface is well suited to your game by asking these questions:● What does the player pick up and touch? Can this be made more pleasing?● How does this map to the actions in the game world? Can the mapping be more direct?● If you can’t create a custom physical interface, what metaphor are you using when you map the inputs to the game world?● How does the physical interface look under the lens of the Toy?● How does the player see, hear, and touch the world of the game? Is there a way to include a physical output device that will make the world become more real in the player’s imagination?The world of videogames occasionally goes through dry spells where designers feel it is not feasible to create custom physical interfaces. but the marketplace thrives on experimentation and novelty, and suddenly specially crafted physical interfaces, like the Dance Dance Revolution mat, the Guitar Hero guitar, and the Wiimote appear bringing new life to old gameplay by giving players a new way to interact with old game mechanics. Lens #61: The Lens of Virtual InterfaceDesigning virtual interfaces can be very tricky. Done poorly, they become a wall between the player and the game world. Done well, they amplify the power and control a player has in the game world. ask these questions to make sure that your virtual interface is enhancing player experience as much as possible:● What information does a player need to receive that isn’t obvious just by looking at the game world?● When does the player need this information? all the time? Only occasionally? Only at the end of a level?● How can this information be delivered to the player in a way that won’t interfere with the player’s interactions with the game world?● Are there elements of the game world that are easier to interact with usinga Virtual interface (like a pop-up menu, for instance) than they are to interact with directly?● What kind of virtual interface is best suited to my physical interface? Pop-up menus, for example, are a poor match for a gamepad controller. Lens #62: The Lens of TransparencyNo matter how beautiful your interface is, it would be better if there were less of it. —Edward TufteThe ideal interface becomes invisible to the player letting the player’s imagination be completely immersed in the game world. To ensure invisibility, ask yourself these questions:● What are the player’s desires? Does the interface let the players do what they want?● Is the interface simple enough that with practice, players will be able to use it without thinking?● Do new players find the interface intuitive? If not, can it be made more intuitive, somehow? Would allowing players to customize the controls help or hurt? feedback: one example is the net on a basketball hoop…does not affect the gameplay at all—but it slows the ball as it descends from the hoop so all players can clearly see that it went in… Lens #63: The Lens of FeedbackThe feedback a player gets from the game is many things: judgment, reward, instruction, encouragement, and challenge. Use this lens to be sure your feedback loop is creating the experience you want by asking these questions at every moment in your game:● What do players need to know at this moment?● What do players want to know at this moment?● What do you want players to feel at this moment? How can you give feedback that creates that feeling?● What do the players want to feel at this moment? Is there an opportunity for them to create a situation where they will feel that?● What is the player’s goal at this moment? What feedback will help them toward that goal? Respond to player input within Tenth of a Second second-order motion: motion that is derived from the action of the player. Lens #64: The Lens of JuicinessTo call an interface “juicy” might seem kind of silly—although it is very common to hear an interface with very little feedback described as “dry.” Juicy interfaces are fun the moment you pick them up. To maximize juiciness, ask yourself these questions:● Is my interface giving the player continuous feedback for their actions? If not, why not?● Is second-order motion created by the actions of the player? Is this motion powerful and interesting?● Juicy systems reward the player many ways at once. When I give the player a reward, how many ways am I simultaneously rewarding them? Can I find more ways? Lens #65: The Lens of PrimalitySome actions and interfaces are so intuitive that animals were doing them hundreds of millions of years ago. To capture the power of primality, ask yourself these questions:● What parts of my game are so primal an animal could play? Why?● What parts of my game could be more primal? Channels of Information List and Prioritize Information: Immediate surroundings, Health, … Inventory List Channels of information: top of screen, sound effects, avatar … Map Information to Channels. Lens #66: The Lens of Channels and DimensionsChoosing how to map game information to channels and dimensions is the heart of designing your game interface. Use this lens to make sure you do it thoughtfully and well. ask yourself these questions:● What data need to travel to and from the player?● Which data are most important?● What channels do I have available to transmit these data?● Which channels are most appropriate for which data? Why?● Which dimensions are available on the different channels?● How should I use those dimensions? Modes Use as few modes as possible Make different modes look as different as possible Lens #67: The Lens of ModesAn interface of any complexity is going to require modes. To make sure your modes make the player feel powerful and in control and do not confuse or overwhelm, ask yourself these questions:● What modes do I need in my game? Why?● Can any modes be collapsed or combined?● Are any of the modes overlapping? If so, can I put them on different input channels?● When the game changes modes, how does the player know that? Can the game communicate the mode change in more than one way? Steal: top-down approach Customize: bottom-up approach Interest Curves…any entertainment experience is a series of moments. Lens #68: The Lens of MomentsMemorable moments are stars that make up the constellation of your interest curve. To chart what is most important, ask yourself these questions:● What are the key moments in my game?● How can I make each moment as powerful as possible? Lens #69: The Lens of the Interest CurveExactly what captivates the human mind often seems different for every person, but the most pleasurable patterns of that captivation are remarkably similar for everyone. To see how a player’s interest in your experience changes over time, ask yourself these questions:● If I draw an interest curve of my experience, how is it generally shaped?● Does it have a hook?● Does it have gradually rising interest, punctuated by periods of rest?● Is there a grand finale, more interesting than everything else?● What changes would give me a better interest curve?● Is there a fractal structure to my interest curve? Should there be?● Do my intuitions about the interest curve match the observed interest of the players? If I ask playtesters to draw an interest curve, what does it look like?Since all players are different, you may find it quite useful to use the lens of the Interest Curve and lens #19, The Player, at the same time, creating a unique interest curve for each of the types of players your game is trying to reach. StoryThe String of Pearls: cut scene, game level, cut scene, game level … Ico, The Last of Us…The Story Machine: a story is a sequence of events… a good game is like a story machine—generating sequences of interesting events. CharacterAvatarsWe have the ability to project ourseves into just about anything we control.First Person View: greater projectionVisible Avatar: power of empathy…as if the avatar is a kind of kinesthetic voodoo doll for the guest…subconscious… The Ideal Form the kind that they player has always wanted to be… people we sometimes dream about being. When you combine an iconic character with a detailed world, you get a powerful combination. Lens #85: The Lens of the AvatarThe avatar is a player’s gateway into the world of the game. To ensure the avatar brings out as much of the player’s identity as possible, ask yourself these questions:● Is my avatar an ideal form likely to resonate with my players?● Does my avatar have iconic qualities that let a player project themselves into the character? Creating Characters …list all the functions…then list the characters you had been thinking of putting in the game, and see how they match up. Lens #86: The Lens of Character FunctionTo make sure your characters are doing everything your game needs them to do, ask yourself these questions:● What are the roles I need the characters to fill?● What characters have I already imagined?● Which characters map well to which roles?● Can any characters fill more than one role?● Do I need to change the characters to better fit the roles?● Do I need any new characters? Traits…define a small, distilled list of traits that encapsulate the character.their actions should demonstrate the traits…if your character is sneaky, does it show in his jump animation? Lens #87: The Lens of Character TraitsTo ensure that the traits of a character show in what they say and do, ask yourself these questions:● What traits define my character?● How do these traits manifest themselves in the words, actions, and appearance of my character? Interpersonal Circumplex Lens #88: The Lens of the Interpersonal CircumplexUnderstanding the relationships between your characters is crucial. One way to do this is to create a graph with one axis labeled hostile/friendly and the other labeled submissive/dominant. Pick a character to analyze, and put them in the middle. Plot out where other characters lie relative to that character, and ask yourself these questions:● are there any gaps in the chart? Why are they there? Would it be better if the gaps were filled?● are there “extreme characters” on the graph? If not, would it be better if there were?● are the character’s friends in the same quadrant, or different quadrants? What if that were different? Lens #89: The Lens of the Character WebTo flesh out your characters’ relationships better, make a list of all your char- acters, and ask yourself these questions:● How, specifically, does each character feel about each of the others?● are there any connections unaccounted for? How can I use those?● are there too many similar connections? How can they be more different? Lens #90: The Lens of StatusWhen people interact, they take on different behaviors depending on their status levels. To make your characters more aware of each other, ask yourself these questions:● What are the relative status levels of the characters in my game?● How can they show appropriate status behaviors?● Conflicts of status are interesting—how are my characters vying for status?● Changes of status are interesting—where do they happen in my game?● How am I giving the player a chance to express status? Lens #91: The Lens of Character TransformationWe pay attention to character transformation, because we care about what might change us. To ensure your characters are transforming in interesting ways, ask yourself these questions:● How does each of my characters change throughout the game?● How am I communicating those changes to the player? Can I communicate them more clearly, or more strongly?● Is there enough change?● are the changes surprising and interesting?● are the changes believable? SpaceCoping with Bad SuggestionsWhen someone makes a bad suggestion … it just means they are trying to help.And most of the time, when one of these bad suggestions comes up, it is a solution to an unstated problem.… if you can figure out what problem the client is trying to solve with their suggestion,perhaps you can come up with a solution that does a better job of solving the problem, and the client will be thrilled. … the importance of finding ways for them to feel like creative partners on your game","raw":null,"content":null,"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"/tags/读书笔记/"}]},{"title":"行为树 (BehaviourTree)","slug":"20171122-BehaviourTree","date":"2017-11-21T16:00:00.000Z","updated":"2017-11-23T01:42:01.545Z","comments":true,"path":"2017/11/22/20171122-BehaviourTree/","link":"","permalink":"/2017/11/22/20171122-BehaviourTree/","excerpt":"","text":"Chris Simpson, Behavior trees for AI: How they work Node Canvas, Documentation Unreal Engine, Documentation","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"}]},{"title":"<出发点> 读书笔记 (1979~1996)","slug":"20170810-ChuFaDian","date":"2017-08-09T16:00:00.000Z","updated":"2018-06-06T08:04:36.813Z","comments":true,"path":"2017/08/10/20170810-ChuFaDian/","link":"","permalink":"/2017/08/10/20170810-ChuFaDian/","excerpt":"国家的前途 [对谈] 筑紫哲也宫崎 在幼稚园教识字、写字，我认为这种做法应该舍弃。当孩子到达小学五年级左右的阶段，开始把自己同化成主角去思考故事时，若是在他的额头上盖一个又一个的大叉叉，那么以后再怎么样都不会恢复了。    童年不是为了长成大人而存在的，它是为了童年本身，为了体会做孩子时才能体验的食物而存在的。童年时五分钟的经历，甚至胜过成人一整年的经历。精神创伤也是在这个时期形成。站在这个角度想想，整个社会实在应该多用智慧去帮助孩子生存下去。\n筑紫 我想，受伤最大的应该是孩子的两种能力吧…自己动手做东西的创造力，以及如果把他丢在一边，就算是莫名其妙的东西也会玩得很起劲的想象力…扼杀那两种能力确实是成年人的各种罪状中最为重大的一项。\n","text":"国家的前途 [对谈] 筑紫哲也宫崎 在幼稚园教识字、写字，我认为这种做法应该舍弃。当孩子到达小学五年级左右的阶段，开始把自己同化成主角去思考故事时，若是在他的额头上盖一个又一个的大叉叉，那么以后再怎么样都不会恢复了。 童年不是为了长成大人而存在的，它是为了童年本身，为了体会做孩子时才能体验的食物而存在的。童年时五分钟的经历，甚至胜过成人一整年的经历。精神创伤也是在这个时期形成。站在这个角度想想，整个社会实在应该多用智慧去帮助孩子生存下去。 筑紫 我想，受伤最大的应该是孩子的两种能力吧…自己动手做东西的创造力，以及如果把他丢在一边，就算是莫名其妙的东西也会玩得很起劲的想象力…扼杀那两种能力确实是成年人的各种罪状中最为重大的一项。 关于动画制作缅怀已逝的世界我心中的动画会让我想要亲自下去做的作品，就是我的动画 想要拥有自己的世界……既要读书，有对异性有强烈的憧憬。于是，想要发泄的青少年便会想要“拥有自己的世界”，我称之为“向往失落的世界”。在边缘状态中紧张求生正是他们所向往的人生，不过如果让他们的现实生活也卷入类似的漩涡，他们又会强烈的拒绝。人从出生的那一刻起，“可能性”就在渐渐丧失……所以人们要到幻想的世界里悠游 以 现实主义 为中心不管是什么样的机器人都好，它应该是主角花功夫做出来且坏了是由主角自己将它修好的——我认为这才是真正的机械的故事 在谈“动画技术”之前年轻的时候，人人都想早日独当一面，这种念头让许多人先钻研起技术来……我劝大家在投入这一行之前，趁着还有自己的时间多多充实自我，把看事情的角度和价值观等基础原则弄稳一点。……你更应该继续坚持意向，不要失去自己的独特之处，一旦中途放弃，剩下的路就只能……用“这样赚多少钱”的标准来衡量生活，然后任“收视率”来摆布你对作品的喜怒哀乐了。 趁现在“真正学习”！……假设要……画个飞行中的飞行挺，他们脑中只能浮现的却只有从前在其他卡通里看过的印象，这很糟。……打开飞机历史的书来看，会发现一个叫伊果·塞考斯基的名字。塞考斯基在一九一三年建造了全世界第一架四浆复翼机……想象他当时的模样——一面承受着风压，一面望着引擎的方向，也是另一番豪情吧。试着去揣摩他当时极欲飞行成功的心情，如此入画之后的生动感，绝不是抄抄电视卡通、玩玩模型飞机或坐在喷射客机的密闭机舱里可以衍生得出来的。 从发想到影片我认为创作动画就是在创造一个虚构的世界。那个世界能抚慰受现实压迫的心灵，激励萎靡的意志，化解紊乱的情感，使观者拥有平缓轻快的心情，以及受到净化后的澄明心境。 会走上动画世界这条路的人，大多是比一般人更爱做梦的人，除了自己做梦，他们也希望将这样的梦境传达给别人。渐渐地，他们会发现，让别人快乐也成了一种无可取代的乐趣。若是曾想要告诉别人夜里做过的梦是多么的美好或有多么的悲伤的人，应该就能体会这其中的难处了。更何况，一部作品必须透过集体作业才能完成，所以其过程自然是更复杂。 如果自己拥有能力与机会去创造出更美好的世界，那么天底下再也没有比这更好的职业了。 在日常工作中，你可以在人云亦云中说说真话，或是为空洞的人物注入生机……它就有可能是你的转机。只有日日不懈的努力，不找借口为自己开脱的人，才能看见这样的机会。 当别人对你无所期待时，不妨不求报酬的说服他们接受你的提案……抓住机会，做好 随时俯冲的准备，乃是这份职业的希望所在 发想 — 一切的开端不要管别人是否觉得有趣，重要的是你要做出自己想看的东西。不停的画，越多越好，画够了，一个世界便成型了。 对力量的向往 — 机械对机械的关注是基于潜意识中对力量的向往。我希望动画里所出现的机械，能借着在地面奔驰，在海里潜行，在广阔天空飞翔，帮助人们从束缚中解放。 “我现在画的东西，是我真正想做的事情吗？我会不会错了？”","raw":null,"content":null,"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"/tags/读书笔记/"}]},{"title":"乐趣理论读书笔记 (Notes of A Theory of Fun)","slug":"20170606-theoryoffun","date":"2017-06-05T16:00:00.000Z","updated":"2018-06-06T08:04:47.970Z","comments":true,"path":"2017/06/06/20170606-theoryoffun/","link":"","permalink":"/2017/06/06/20170606-theoryoffun/","excerpt":"A Theory of Fun for Game Design","text":"A Theory of Fun for Game Design How the Bran Works1People dislike chaos. We like order (with a bit of texture or variation) “人们不喜欢混乱，我们喜欢（丰富多彩的）”无法理解的事物等于噪音 1Practice to Build up a Library, Routine “通过训练建立流程“理解训练，很重要新玩法须考虑玩家学习成本 What Games Are12341. concentrated chunks, abstracted, iconic, exclude distracting extra details2. very fundamental and powerful learning tools3. Games that fail to exercise the brain become boring (tic-tac-toe)4. learning is the drug 会使人沉迷上瘾的，正是学习本身。应当和解开一道很难的数学/物理题的感觉是类似的，通过长期学习训练掌握了解题方法并通过活用而取得成果，的那种快感。 What Games Are Not1Fun is the act of mastering a problem mentally Different Fun for Differnt Folks1People will usually choose to play the games they are already good at, that reflect their strengths. 人们通常选择玩那些他们擅长的，能体现他们能力的游戏1if people are to achieve their maximum potential, they need to do the hard work of playing the games they don’t get, the games that don’t appeal to their natures. 然而大多数人可能会选择放弃 The Problem with Learning123456Human mind want to take shortcutsWhen a player cheats in a game, she is choosing a battlefield that is broader in context than the game itself.That’s what games are...package up the unpredictable and the learning experience into a space and time where there is no risk.It’s outright unnatural for a human being to see another human being succeeding at something and not want to compete.The human mind is goal-drivenRewards are one of the key components of a successful game activity Successful games tend to incorporate the following elements:1234567891011121. Preparation2. A sense of space3. A solid core mechanic4. A range of challenges5. A range of abilities required to solve the encounter6. Skill required in using the abilitiesIf there’s no sense of space, we call it trivial.If there’s no core mechanic, there’s no game system at all.If there’s no range of challenges, we exhaust it quickly.If there aren’t multiple choices to make, it’s simplistic.And if skill isn’t required, it’s tedious. To make the experience a learning experience:1231. A variable feedback system.2. The Mastery Problem must be dealt with.3. Failure must have a cost. 1Most long-lasting games in the past have been competitive, because they lead to an endless supply of similar yet slightly varied puzzles. 1Designers of games need to be careful not to make the game demand too much skill. They must keep in mind that players are always trying to reduce the difficulty of a task. The easiest way to do that is to not play. Tool for checking for the absence of fun:1234567891011121. Do you have to prepare before taking on the challenge?2. Can you prepare in different ways and still succeed?3. Does the environment in which the challenge takes place affect the challenge?4. Are there solid rules defined for the challenge you undertake?5. Can the core mechanic support multiple types of challenges?6. Can the player bring multiple abilities to bear on the challenge?7. At high levels of difficulty, does the player have to bring multiple abilities to bear on the challenge?8. Is there skill involved in using an ability? (If not, is this a fundamental “move” in the game, like moving one checker piece?)9. Are there multiple success states to overcoming the challenge? (In other words, success should not have a single guaranteed result.)10. Do advanced players get no benefit from tackling easy challenges?11. Does failing at the challenge at the very least make you have to try again?If your answer to any of the above questions is “no,” then the game system is probably worth readdressing. 1Your sole responsibility is to know what the game is about and to ensure that the game teaches that thing. That one thing, the theme, the core, the heart of the game...no system should be in the game that does not contribute towards that lesson The Problem with PeopleTactics to make games self-refreshing:12341. “Emergent behavior”2. Storytelling3. Placing players head-to-head4. Using players to generate content 1The real problem with people is that: PEOPLE ARE LAZY. 12The problem with people isn’t that they work to undermine games and make them boring.We’re reluctant to abandon known solutions. 1234Because games exist within the confines of “let’s pretend,” They let you be a godlet. They can offer false positive feedback to keep a player playing.Making you feel good about yourself in a pretend arena isn’t what games are for.Games are for offering challenges. Going back through defeated challenges in order to pass time isn’t a productive exercise of your brain’s abilities.Nonetheless, lots of people do it. 赞同作者贯穿本书的一个观点：游戏的目的是学习我之前也有相同的想法，所以看到ToF之后有种同道的感觉。Raph对于游戏的寄望是纯粹的，令人敬仰，但这种纯粹其实是我不同意的。人性既然如此，如何在这客观条件下引导，达成学到东西这一目的，才是设计者(教育者)应当做的。我同意游戏的目的是使玩家挑战自己并不断学习，但我同时认为给人带来快乐也是游戏的目的，作为引导学习的更好的方式，也许是 在快乐的游戏中学习 Basically, game designers suffer from what I call “designeritis.” They build up encyclopedic recollections of games past and present, and they then theoretically use these to make new games.其实能从过往抽象出一些经验，这个未必不正确，比如如果对技术和美术了解的情况下，对于可行性判断乃至整个设计都会很有帮助。 The most creative and fertile game designers working today tend to be the ones who make a point of not focusing too much on other games for inspiration.即游戏设计者要广涉猎，比如电影，漫画，小说，以及其它很多事物 Games in Context12UserGoal [ Constructive, Experiential, Destructive ]Interaction [ Collaborative, Competitive, Solo ] Modding is just playing the game in another way我最近也在想这个，比如做M&amp;B或者Paradox的历史游戏的Mod，再或者Domiions的Mod，的时候，确实非常有趣，不亚于玩游戏本身。 The chills are not always enjoyable…engaging in interaction with games need not be fun, either, but might indeed be fulfilling, thought-provoking, challenging, and also difficult, painful, and even compulsive.并不仅有快乐使人觉得一款游戏好 Mere entertainment becomes art when the communicative element in the work is either novel or exceptionally well done.The analogy for a game would be one you can replay over and over again, and still discover new things.Choosing constraints is one of the most fruitful ways to creativity. Entertainment and Art若以学习为目的，则应靠向Entertainment，但游戏本身则不受这限制，二者皆可。 The Ethics of Entertainment画面、音效等等也是用户体验的一部分，也非常重要 The constructive thing to do is to push the boundary gently so that it doesn’t backfire. That’s how we got Lolita, Catcher in the Rye, and Apocalypse Now. Where Games Should GoMastery of the medium of games will have to imply authorial intent. The formal systems must be capable of invoking desired learning patterns.If they can’t, then games are a second-rate art form, and always will be. Taking Their Rightful Place…games do need to illuminate aspects of ourselves that we do not understand fully. 1The gap between those who want games to entertain and those who want games to be art does not exist. Art and entertainment are not terms of type — they are terms of intensity. 12Most people ... are very willing to settle for easy entertainmentWe call this “pop music.” We call it “mass market.” 如果大部分人喜欢轻松的娱乐，而轻松娱乐与有突破性相抵，则对大多数人来说寓教于乐为不可能。似乎并非如此，权力的游戏可能就是一个例外，吉卜力的作品可能大部都是例外。还是要明确目的，掌控方法。寓教于乐，最差的情况下，只要比现行教科书生动有趣，就是一种进步。 1Popular ... is largely an accident of history 1234In the end, if I can say with a straight face after a day’s work making games that one person out there learned to be a better leader, a better parent, a better co-worker, learned a new skill that kept her her job, a new skill that helped him advance the state of the art in his chosen field, a new skill that made their her grow a little…Then I will know that my work was valuable. It was worthwhile. It was a contribution to society.I MAKE GAMES, AND I&apos;M PROUD OF I T. Epilogue1234Film was once trashy kinetoscopes at the penny arcade``### Ten Years Later But after ten years, I look back on it all and I see games as not just a swirl of systems,but as a space between the dust from which we come and the dust we shall be,a space in which we can engage in that grand pursuit of happiness.```","raw":null,"content":null,"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","permalink":"/tags/读书笔记/"}]},{"title":"Unity ShaderGUI","slug":"20170605-ShaderGUI","date":"2017-06-04T16:00:00.000Z","updated":"2017-08-01T01:07:37.489Z","comments":true,"path":"2017/06/05/20170605-ShaderGUI/","link":"","permalink":"/2017/06/05/20170605-ShaderGUI/","excerpt":"","text":"12345678910111213_materialEditor.TexturePropertySingleLine(Styles.maintexText, _MainTex);_materialEditor.TextureScaleOffsetProperty(_MainTex); bool enabled = IsKeywordEnabled(_materialEditor, \"Enable_NORMAL\");enabled = ToggleField(Styles.enableNormalText, enabled); _materialEditor.TexturePropertySingleLine(Styles.normalMapText, _BumpMap, _Bumpness); if (EditorGUI.EndChangeCheck())&#123; SetKeyword(_materialEditor, \"Enable_NORMAL\", enabled); return true;&#125;","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Unity着色器变种 (Shader Variants)","slug":"20170531-ShaderVariants","date":"2017-05-30T16:00:00.000Z","updated":"2018-06-04T08:23:50.259Z","comments":true,"path":"2017/05/31/20170531-ShaderVariants/","link":"","permalink":"/2017/05/31/20170531-ShaderVariants/","excerpt":"\n用法移动端游戏，在运行时根据实际情况开关渲染功能，达到效果和性能的平衡。如 Kabam 的 Marvel: Contest of Champions\n开发时帮助美术判断效果。\nUnity实现Unity提供了着色器变种功能：Making multiple shader program variants","text":"用法移动端游戏，在运行时根据实际情况开关渲染功能，达到效果和性能的平衡。如 Kabam 的 Marvel: Contest of Champions 开发时帮助美术判断效果。 Unity实现Unity提供了着色器变种功能：Making multiple shader program variants - 允许生成shader的变种通常称为 “mega shaders” 或 “uber shaders” - 变种数量是指数级增长的如12#pragma multi_compile A B C#pragma multi_compile D E 会生成6个变种。某些情况下可以考虑Shader Hardware Variants：1#pragma hardware_tier_variants renderer 生成3种不同变种123#pragma multi_compile __ Enable_NORMAL#pragma multi_compile __ Enable_SPECULAR#pragma multi_compile __ Enable_REFLECTION - multi_compile 和 shader_feature 的区别 未使用的shader_feature不会build。 所以对于我们运行时控制渲染的要求： 用shader_feature，只要build时把能用到的feature全开就好（更通用） 用multi_compile（更安全）","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Unity中的头发渲染 (Hair Shading)","slug":"20170524-HairScheuermann","date":"2017-05-23T16:00:00.000Z","updated":"2018-06-04T08:21:30.058Z","comments":true,"path":"2017/05/24/20170524-HairScheuermann/","link":"","permalink":"/2017/05/24/20170524-HairScheuermann/","excerpt":"\nScheuermann 的方法用Thorsten Scheuermann的方法来做头发：在GDC2004上的幻灯片Hair Rendering and Shading,和Practical Real-Time Hair Rendering and Shading\n12345inline float3 ShiftTangent(float3 T, float3 N, float shift)&#123;\tfloat3 shiftedT = T + shift * N;\treturn normalize(shiftedT);&#125;","text":"Scheuermann 的方法用Thorsten Scheuermann的方法来做头发：在GDC2004上的幻灯片Hair Rendering and Shading,和Practical Real-Time Hair Rendering and Shading 12345inline float3 ShiftTangent(float3 T, float3 N, float shift)&#123; float3 shiftedT = T + shift * N; return normalize(shiftedT);&#125; 12345678inline float StrandSpecular(float3 T, float3 V, float3 L, float exponent)&#123; float3 H = normalize(L + V); float dotTH = dot(T, H); float sinTH = sqrt(1.0 - dotTH * dotTH); float dirAtten = smoothstep(-1.0, 0.0, dot(T, H)); return dirAtten * pow(sinTH, exponent);&#125; 123456789101112131415161718inline float3 HairLighting(float3 tangent, float3 normal, float3 lightVec, float3 viewVec, float spec, float specShift, float specMask)&#123; // shift tangents half3 T = -normalize(cross(normal, tangent)); float shiftTex = specShift - 0.5; float3 t1 = ShiftTangent(T, normal, _PrimaryShift + shiftTex); float3 t2 = ShiftTangent(T, normal, _SecondaryShift + shiftTex); // specular lighting float3 specular = _SpecColor1 * StrandSpecular(t1, viewVec, lightVec, _SpecMultiplier1); // add 2nd specular term, modulated with noise texture specular += _SpecColor2 * specMask * StrandSpecular(t2, viewVec, lightVec, _SpecMultiplier2); return specular * spec;&#125; 在这种做法下头发UV需要沿着Shift贴图的方向（一般是上下）来摆放，如果不想必须如此，则可以用守望先锋的做法。 守望先锋的头发 (Overwatch Hair Shading)在这篇Technical Study: Overwatch（关于守望先锋的学习帖）中说道，D.VA 的头发有这样一张”奇怪的贴图”: 经过试验，这张贴图应该是记录了Tangent的。因为有这张贴图，守望的头发UV就可以随意摆放而不受限制了。 然而似乎用一个uv1也可以解决……还需要再学习","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"街霸5技术学习 (Technical Study Street Fighter V)","slug":"20170516-ryu","date":"2017-05-15T16:00:00.000Z","updated":"2018-06-04T10:51:09.581Z","comments":true,"path":"2017/05/16/20170516-ryu/","link":"","permalink":"/2017/05/16/20170516-ryu/","excerpt":"","text":"亀井敏征的演讲可以说分享的非常详细，非常值得学习的材料。 原版 [pptx下载地址]（需要注册帐号）整理版 [日文版] [中文版]","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Low Poly物体着色整合 (Low-Poly Objects Colorization & Batching)","slug":"20170426-JJPureColor","date":"2017-04-25T16:00:00.000Z","updated":"2018-06-04T08:22:58.027Z","comments":true,"path":"2017/04/26/20170426-JJPureColor/","link":"","permalink":"/2017/04/26/20170426-JJPureColor/","excerpt":"功能美术可以直接在Unity中修改物体颜色(开镜头特效等情况下)，修改完毕满意后，输出一张贴图，各物体分别输出FBX\n使用色板(Palette)着色的方式被美术认为不方便后改为直接在物体上着色。但实际上色板模式可能有改进空间。\n生成贴图 (Generate Texture)","text":"功能美术可以直接在Unity中修改物体颜色(开镜头特效等情况下)，修改完毕满意后，输出一张贴图，各物体分别输出FBX 使用色板(Palette)着色的方式被美术认为不方便后改为直接在物体上着色。但实际上色板模式可能有改进空间。 生成贴图 (Generate Texture) 123456789101112131415161718192021222324252627282930313233public static int[] _acceptableTexSize = new int[7] &#123; 32, 64, 128, 256, 512, 1024, 2048 &#125;; public static int CalcTexSize(int pixelCount) &#123; for (int i = 0; i &lt; _acceptableTexSize.Length; i++) &#123; if (Mathf.Pow(_acceptableTexSize[i], 2) &gt; pixelCount) &#123; return _acceptableTexSize[i]; &#125; &#125; return -1;&#125; public static Texture2D GenerateTexture(Color[] colors) &#123; int texSize = CalcTexSize(colors.Length); if (texSize &lt; 0) &#123; Debug.LogError(\"颜色（\" + colors.Length + \"个）太多一张贴图Hold不住了\"); return new Texture2D(1, 1); &#125; if( texSize == 0) &#123; Debug.LogError(\"木有颜色可以输出（\" + colors.Length + \"个）\"); return new Texture2D(1, 1); &#125; Texture2D tex = new Texture2D(texSize, texSize); for (int i = 0; i &lt; colors.Length; i++) &#123; tex.SetPixel(i % texSize, i / texSize, colors[i]); &#125; tex.Apply(); return tex;&#125; 生成模型 (Generate FBXs)UnityFBXExporter","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"法线贴图 (Normal Map)","slug":"20170324-normal-map","date":"2017-03-23T16:00:00.000Z","updated":"2018-06-04T08:23:30.707Z","comments":true,"path":"2017/03/24/20170324-normal-map/","link":"","permalink":"/2017/03/24/20170324-normal-map/","excerpt":"解包NormalMap (Unpack NormalMap)x向量存在a通道，y在g通道。而那种黄色的法线贴图是x在r通道，y在g通道，如果把b加上就会变成常见的蓝紫色Normal。","text":"解包NormalMap (Unpack NormalMap)x向量存在a通道，y在g通道。而那种黄色的法线贴图是x在r通道，y在g通道，如果把b加上就会变成常见的蓝紫色Normal。 12345678910111213141516171819//UnityStandardUtils.cginc中的解包方法half3 UnpackScaleNormal(half4 packednormal, half bumpScale)&#123; #if defined(UNITY_NO_DXT5nm) return packednormal.xyz * 2 - 1; #else half3 normal; normal.xy = (packednormal.wy * 2 - 1); #if (SHADER_TARGET &gt;= 30) // SM2.0: instruction count limitation // SM2.0: normal scaler is not supported normal.xy *= bumpScale; #endif normal.z = sqrt(1.0 - saturate(dot(normal.xy, normal.xy))); return normal; #endif&#125; half3 unpackedNormal = UnpackScaleNormal(tex2D(_BumpMap, i.uv.xy), _Bumpness); 转换到世界空间去 (From Tangent Space to World Space)转换到世界空间需要到对应点在世界的转换矩阵。 123456789101112131415tangentWorld = normalize( mul(_Object2World, half4(v.tangent.xyz, 0.0)).xyz); normalWorld = normalize( mul(half4(v.normal, 0.0), _World2Object).xyz); bitangentWorld = normalize( cross(o.normalWorld, o.tangentWorld) * v.tangent.w); half3x3 local2WorldTranspose = half3x3( tangentWorld, bitangentWorld, normalWorld ); 关于Normal, Tangent和Bitangent（Binormal）的解释：Tangent space matrix (TBN)What are normal, tangent and binormal vectors and how are they used. 最后获得世界空间的Normal 1half3 normalDir = normalize(mul(unpackedNormal, local2WorldTranspose));","raw":null,"content":null,"categories":[],"tags":[{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Another Workflow from Phtoshop to Unity","slug":"20140731-PhotoshopUnityPipeline","date":"2014-07-30T16:00:00.000Z","updated":"2018-06-06T09:12:01.955Z","comments":true,"path":"2014/07/31/20140731-PhotoshopUnityPipeline/","link":"","permalink":"/2014/07/31/20140731-PhotoshopUnityPipeline/","excerpt":"最近我们需要把一些Photoshop做的2D素材导入Unity。如果用传统方式一张一张的导，然后在Unity里再拼起来的话，会非常费时费力。好在这个过程是可以自动化的。\n一种方法是在Unity端全部解决。SwingSwingSubmarine 的 Ben 写的 From Photoshop to Unity 描述了这种方法，使用了一个第三方的可以处理Photoshop文件的Library：PsdPlugin. 这种方法的问题是项目文件夹下需要保存psd文件，然后psd文件可能比较大，版本控制会有点麻烦。\nUnity官方博客曾经发过一套方法: A good workflow to smoothly import 2D content into Unity, Part I 和 Part II，作者是 Brett Bibby。 这个方法中，输出图片素材由Photoshop完成，导入和重建场景由Unity完成，这不但是一个更自然的方法，也是一个更模块化的方法，谁也不用知道对方领域里的东西。但是原版方法要求事先合成一个图层才能输出。\n所以这篇博客描述一种尽量符合美术工作习惯，能够从原版工作文档直接输出的方法。","text":"最近我们需要把一些Photoshop做的2D素材导入Unity。如果用传统方式一张一张的导，然后在Unity里再拼起来的话，会非常费时费力。好在这个过程是可以自动化的。 一种方法是在Unity端全部解决。SwingSwingSubmarine 的 Ben 写的 From Photoshop to Unity 描述了这种方法，使用了一个第三方的可以处理Photoshop文件的Library：PsdPlugin. 这种方法的问题是项目文件夹下需要保存psd文件，然后psd文件可能比较大，版本控制会有点麻烦。 Unity官方博客曾经发过一套方法: A good workflow to smoothly import 2D content into Unity, Part I 和 Part II，作者是 Brett Bibby。 这个方法中，输出图片素材由Photoshop完成，导入和重建场景由Unity完成，这不但是一个更自然的方法，也是一个更模块化的方法，谁也不用知道对方领域里的东西。但是原版方法要求事先合成一个图层才能输出。 所以这篇博客描述一种尽量符合美术工作习惯，能够从原版工作文档直接输出的方法。 Recently we need to transfer a large amount of 2D assets from Photoshop to Unity, then reproduce the positions etc. which is already in Photoshop. It would cost a lot of of time if we do this manually, fortunately we don’t have to, because this process can be automated. A recent approach is From Photoshop to Unity written by Ben of SwingSwingSubmarine. It is a pure Unity-side solution where examine Photoshop file (psd) is also completed inside Unity via a third-party library PsdPlugin. Thus the project have to keep large psd files within Unity’s folder and caused some inconvenience for version control. Another approach is: A good workflow to smoothly import 2D content into Unity, Part I and Part II by Brett Bibby. The images are exported inside Photoshop via Adobe Extend scripts, their positions are recorded in a xml file, then use a customized Unity Editor script to import these assets. This seems to be the most flexible and robust process. However this script is layer-based which still requires the artist to combine layers before export. The process should take place on a ‘working psd’ which doesn’t require the artist to manually change anything before exporting. So here a improved version is described in this blog post. 流程 The ProcessPhotoshop文件The Photoshop document to export 2D素材导入Unity2D Assets imported into Unity, hierarchy is reproduced. 导入生成的xmlCreate a new object in the Hierarchy by importing the xml file exported from Photoshop. 导入完成Imported Object in Unity Scene NotesPerformance:12345678910111213141516// Do not duplicate the whole doc// Create an empty doc and copy export content over is much fastervar doc = app.documents.add( _dupDoc.width, _dupDoc.height, _dupDoc.resolution, artLayer.name, NewDocumentMode.RGB, DocumentFill.TRANSPARENT, _dupDoc.pixelAspectRatio, _dupDoc.bitsPerChannel, //_dupDoc.colorProfileName);app.activeDocument = _dupDoc;exportLayer.duplicate (doc); Adobe Photoshop layer bounds:123456789// CHART - Adobe Photoshop layer bounds://// (bounds[0],bounds[1])// *--------// | |// | |// --------*// (bounds[2],bounds[3])// Adobe Extend Script UI: 12// decode the file path to make sure it (Chinese) displays correctlypathPanel.pathText.text = decodeURI(_options.expFolderPath); 123456789101112131415161718// buttons become useless while the script is running/*var cancelButton = _proPlet.add(\"button\", undefined, \"Cancel\");cancelButton.onClick = function () &#123; stopExcution(); _proPlet.close(); return 'cancel';&#125;*/ // use the 'x' instead_proPlet.onClose = function () &#123; stopExcution();&#125;// Extend Script UI is not reliable in Photoshop, call WaitForRedraw() once after palette is shown.WaitForRedraw (); XML Encoding:12&lt;!-- Use \"UNICODE-1-1-UTF-8\" for Chinese --&gt;&lt;?xml version=\"1.0\" encoding=\"UNICODE-1-1-UTF-8\"?&gt; Unity Deserialize XML:1234567LayersetsObject lo;using (TextReader reader = File.OpenText(filePath)) &#123; XmlSerializer serializer = new XmlSerializer( typeof(LayersetsObject) ); lo = serializer.Deserialize(reader) as LayersetsObject;&#125; Resources[1]. A good workflow to smoothly import 2D content into Unity, Part I and Part II by Brett Bibby[2]. From Photoshop to Unity written by Ben of SwingSwingSubmarine[3]. ExtendScript Toolkit &amp; Adobe Scripting resources on Adobe Scripting Center[4]. Independent Photoshop Scripting Community[5]. Paul Riggott","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"},{"name":"Unity","slug":"Unity","permalink":"/tags/Unity/"}]},{"title":"Mobile Terrain Shader with Multi-UV Mixing","slug":"20140121-MultiUVMixing","date":"2014-01-20T16:00:00.000Z","updated":"2018-06-06T09:18:10.277Z","comments":true,"path":"2014/01/21/20140121-MultiUVMixing/","link":"","permalink":"/2014/01/21/20140121-MultiUVMixing/","excerpt":"","text":"Recently when trying to make a Unity terrain I found it cost dozens of drawcalls, definitely no go for mobile platform. So I wrote a shader that can do multi-texture tilling on a single mesh, as well as Multi-UV Mixing, credit goes to this post by larsbertram1. you can find the shader file at the bottom of this post. Multi-UV Mixing, in plain words, is to scale the texture and mix back onto itself, it is a low-cost method to reduce apparent tilling. [1]. Terrain Advanced Textures (Unreal)","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"},{"name":"Graphics","slug":"Graphics","permalink":"/tags/Graphics/"}]},{"title":"Camera Mapping (相机映射)","slug":"20131129-CameraMapping","date":"2013-11-28T16:00:00.000Z","updated":"2018-06-06T08:45:53.235Z","comments":true,"path":"2013/11/29/20131129-CameraMapping/","link":"","permalink":"/2013/11/29/20131129-CameraMapping/","excerpt":"","text":"The environment in the Character Customization Scene of TWD is not 3D, it is just only one image (above) pre-rendered by Blender. But when we put an actual 3D character in Unity, we what it looks as she/he is standing in the 3D movie studio. How? We do Camera Mapping. First, create a new Camera in Unity and copy the position and rotation of the Blender camera. We can do this because: Blender’s unit = Unity’s unit = 1 meter.Careful about the rotation though, Blenders’ up is Z while in Unity it’s Y. Now for the field of view, we can’t use the same field of view on both camera. You may noticed I used 16mm focal length (that’s 90° FOV on 32mm full frame format sensor) for the Blender camera, but clearly 90° doesn’t match. So export part of the studio, import them into Unity and put them where they were, then drag the “Field of View” slider in Unity’s camera inspector until the objects match the background image, as shown below. And that is it. Now wherever we put a 3D object in the scene (as long as it’s position.y == 0), it will looks like on the ground of that movie studio. PS: one last thing, Photoshop’s “Filter -&gt; Blur -&gt; Iris Blur” was used for the background image.","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"},{"name":"Unity","slug":"Unity","permalink":"/tags/Unity/"}]},{"title":"Basic Character Customization Tutorial (基础角色定制教程)","slug":"20130711-CharacterCustomization","date":"2013-07-10T16:00:00.000Z","updated":"2018-06-06T09:50:17.263Z","comments":true,"path":"2013/07/11/20130711-CharacterCustomization/","link":"","permalink":"/2013/07/11/20130711-CharacterCustomization/","excerpt":"","text":"昨儿做UI的时候想起来，之前搞角色定制找资料挺费劲的，很多东西都不知道啥是啥。Unity的例子帮了大忙，但还是会有 “啥玩意儿啊”， 这种感觉。所以想着把自己的经验在这分享一下。 代码在最下面。 Yesterday I rearranged UI of character customization scene of the under-developing-but-open-for-testing game . And I remembered that, back to a few month ago it was a hard time for me to get information about how to achieve Character Customization. Unity’s example, and the community helped a lot. But I still spent hours to figure out what is what. So I think I should share my experience here. Hope this can help others who were like me. You can download the source file at the bottom of this post. Prepare Assets 俺的模型啥的是用Blender做的。直接用 Unity的例子 的模型也行，都一样。 Before we start, I’ve created these assets in Blender. You can create your own, or simply use assets from Unity’s example, the fundamentals are same. Customize the Character我把所有部件的Prefab都链到Designer里了，然后用个byte数组表示配置。配置里的每个数字代表一个部件。 I linked all my assets in to a GameObject, used a byte[] to specify which parts the player have chosen (called ‘config’). Now just set up the UI and let the player customize his/her character. 12345678910111213public SkinnedMeshRenderer[] skins;public SkinnedMeshRenderer[] hairs;public SkinnedMeshRenderer[] eyebrows;public SkinnedMeshRenderer[] eyes;public SkinnedMeshRenderer[] mouths;public SkinnedMeshRenderer[] clothes;public SkinnedMeshRenderer[] pants;private SkinnedMeshRenderer[][] elements;// character configuration array, // [0 skin,1 hairs, 2 eyebrow, 3 eye, 4 mouth, 5 cloth, 6 pants, 7 accessories]public byte[] config; // = new byte[]&#123;0, 0, 0, 0, 0, 0, 0&#125;;byte[] GetCurrentConfig() &#123; return config; &#125; Combine SkinnedMeshRenderers“You should use only a single skinned mesh renderer for each character. Unity optimizes animation using visibility culling and bounding volume updates and these optimizations are only activated if you use one animation component and one skinned mesh renderer in conjunction……”—— Unity Official Doc - Modeling Characters for Optimal Performance SkinnedMesh 就是关联骨骼的mesh，哪个vertex受哪根骨头影响百分之多少，然后骨头一动皮也就跟着动了。每一个部件都是一个SkinnedMesh，但是这东西很费，很影响性能，所以越少越好。一般一个角色内的SkinnedMesh要把它们合起来。 骨头：在Unity里就是Transform Skinned Meshes are meshes linked with ‘Bones’, Each bone is associated with some vertices of the mesh (with different weights). During animation, the skinned mesh is deformed ( I’ve read somewhere that new mesh are generated for each frame, heavy, so heavy ). So in short, skinned meshes kill performance, and we definitely want less of them in the scene if possible.Yes, we should combine them. In case you are wondering what are Bones, they are just Transforms in Unity. 用下面的代码，根据之前玩家选择的配置，把各个部件粘起来。 In the last Section, we have a byte[] config chosen by the player, now we are going to build a character with single mesh using this config, and here is the function to do this: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475// go is a root GameObject, in my case, I used 'PH.base' shown in the up-right image, it has BonesGameObject GenerateWithConfig (GameObject go, byte[] config)&#123; if (!go.GetComponent&lt;SkinnedMeshRenderer&gt;()) &#123; go.AddComponent&lt;SkinnedMeshRenderer&gt;(); &#125; SkinnedMeshRenderer smr = go.GetComponent&lt;SkinnedMeshRenderer&gt;(); // CombineInstance Struct used to describe meshes to be combined using Mesh.CombineMeshes. List&lt;CombineInstance&gt; combineInstances = new List&lt;CombineInstance&gt;(); // We must put all materials used by all renderers into the final combined renderer, // I combined all the textures into in big texture, in order to have only one material materialList = new List&lt;Material&gt;(); materialList.Add(smr.material); // Same, boneWeights should be copied into the final SkinnedMesh boneWeightsList = new List&lt;BoneWeight&gt;(); Transform[] bones = smr.bones; // Now for each SkinnedMeshRenderer specified by config for (int i = 0; i &lt; config.Length; i++ ) &#123; SkinnedMeshRenderer smr1 = (SkinnedMeshRenderer)Object.Instantiate( elements[ i ][ config[i] ] ); // Add meshes to combineinstances for (int sub = 0; sub &lt; smr1.sharedMesh.subMeshCount; sub++) &#123; CombineInstance ci = new CombineInstance(); ci.mesh = smr1.sharedMesh; ci.transform = smr1.transform.localToWorldMatrix; ci.subMeshIndex = sub; combineInstances.Add(ci); foreach (Material mat in materialList) &#123; if (mat.name != smr1.material.name) &#123; materialList.Add(smr1.material); &#125; &#125; &#125; boneWeightsList.AddRange(smr1.sharedMesh.boneWeights); Object.Destroy(smr1.gameObject); &#125; // Combine meshes smr.sharedMesh = new Mesh(); smr.sharedMesh.CombineMeshes(combineInstances.ToArray(), true, false); smr.sharedMesh.boneWeights = boneWeightsList.ToArray(); // Combine meshes smr.bones = bones; smr.materials = materialList.ToArray(); // Update bindposes // \" The bind pose is the pose that the skeleton is in when you bind skin. // When you pose a character’s skeleton after skinning, the skeleton’s actions cause deformations // to the skin. The only pose that does not cause deformations to the skin is the bind pose. \" // [Source: Maya User Guide] List&lt;Matrix4x4&gt; bindposes = new List&lt;Matrix4x4&gt;(); for (int i = 0; i &lt; bones.Length; i++) &#123; bindposes.Add(bones[i].worldToLocalMatrix * transform.localToWorldMatrix); &#125; smr.sharedMesh.bindposes = bindposes.ToArray(); // This is for Blender exported fbx, not sure how other program should rotate go.transform.Rotate(Vector3.right, -90); // (Optional) go.GetComponent&lt;Animation&gt;().Play(); // DONE, this GameObject have the combined SkinnedMeshRenderer return go;&#125; 搞定！ 代码在下面： That is it! Download the source code below: phcharacterdesigner.cs","raw":null,"content":null,"categories":[],"tags":[{"name":"Game Dev","slug":"Game-Dev","permalink":"/tags/Game-Dev/"},{"name":"Unity","slug":"Unity","permalink":"/tags/Unity/"}]}]}